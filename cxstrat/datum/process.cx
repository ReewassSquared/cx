//code generated by CXDatum. DO NOT EDIT.

package model

import "cxdatum"

var dbStrats str
var dbAccounts str
var dbTheNames str
var dbReplies str
var dbWallets str
var dbAllStrats str
var dbHashtags str
var dbLikes str
var dbRestrats str
var dbmeta str


func initdb() {
	var ok bool
	dbReplies = "Replies"
	ok = cxdatum.bucket(dbReplies)
	dbStrats = "Strats"
	ok = cxdatum.bucket(dbStrats)
	dbAccounts = "Accounts"
	ok = cxdatum.bucket(dbAccounts)
	dbTheNames = "TheNames"
	ok = cxdatum.bucket(dbTheNames)
	dbRestrats = "Restrats"
	ok = cxdatum.bucket(dbRestrats)
	dbWallets = "Wallets"
	ok = cxdatum.bucket(dbWallets)
	dbAllStrats = "AllStrats"
	ok = cxdatum.bucket(dbAllStrats)
	dbHashtags = "Hashtags"
	ok = cxdatum.bucket(dbHashtags)
	dbLikes = "Likes"
	ok = cxdatum.bucket(dbLikes)
	dbmeta = "meta"
	ok = cxdatum.bucket(dbmeta)
}




func isBase58(code ui8) (out bool) {
    out = false
    var magicstr []ui8
    magicstr = cxdatum.str2bytes("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
    for i := 0; i < len(magicstr); i++ {
        if code == magicstr[i] {
            out = true
            return
        }
    }
}

func isTweetHashtag(code ui8) (out bool) {
    out = false
    var magicstr []ui8
    magicstr = cxdatum.str2bytes("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_")
    for i := 0; i < len(magicstr); i++ {
        if code == magicstr[i] {
            out = true
            return
        }
    }
}

func toHexDigit(code ui8) (out ui8) {
    if code < 64UB {
        out = code - 48UB
    } else {
        out = code - 87UB
    }
}

func shaToHex(sha [32]ui8) (out str) {
    var arr []ui8
    var idx i32
    var intmp ui8
    for i := 0; i < 32; i++ {
        intmp = sha[i]
        intmp = intmp / 16UB
        intmp = intmp + 48UB
        if intmp >= 58UB {
            intmp = intmp + 39UB
        }
        arr = append(arr, intmp)

        intmp = sha[i]
        intmp = intmp % 16UB
        intmp = intmp + 48UB
        if intmp >= 58UB {
            intmp = intmp + 39UB
        }
        arr = append(arr, intmp)
    }

    out = cxdatum.bytes2str(arr)
}


func stringToSha(s str) (out [32]ui8) {
    var tpcode ui8
    var indx i32 
    var tweet []ui8
    tweet = cxdatum.str2bytes(s)
    if len(tweet) != 64 {
        out = cxdatum.sumsha256(tweet)
        return
    }
    for i := 0; i < 32; i++ {
        tpcode = toHexDigit(tweet[indx])
        indx = indx + 1
        tpcode = tpcode * 16UB
        tpcode = tpcode + toHexDigit(tweet[indx])
        indx = indx + 1
        out[i] = tpcode
    }
}


func processLike (owner [25]ui8, txid [32]ui8, strat []ui8) {
	var _cxdatum_tmp_116 []ui8
	for _cxdatum_tmp_117 := 29; _cxdatum_tmp_117 < 93 && _cxdatum_tmp_117 < len(strat); _cxdatum_tmp_117++ {
		_cxdatum_tmp_116 = append(_cxdatum_tmp_116, strat[_cxdatum_tmp_117])
	}
	var _cxdatum_tmp_118 str
	_cxdatum_tmp_118 = cxdatum.bytes2str(_cxdatum_tmp_116)
	var _cxdatum_tmp_119 [32]ui8
	_cxdatum_tmp_119 = stringToSha(_cxdatum_tmp_118)
	var ntxid [32]ui8
	ntxid = _cxdatum_tmp_119

	var _cxdatum_tmp_120 []ui8
	_cxdatum_tmp_120 = serializeSha(ntxid)
	var _cxdatum_tmp_121 []ui8
	_cxdatum_tmp_121 = cxdatum.fetch(dbStrats, _cxdatum_tmp_120)
	var _cxdatum_tmp_122 Strat
	if len(_cxdatum_tmp_121) == 0 {
		_cxdatum_tmp_122 = Strat{}
	} else {
		_cxdatum_tmp_122 = deserializeStrat(_cxdatum_tmp_121)
	}
	var _cxdatum_tmp_125 i32
	_cxdatum_tmp_125 = _cxdatum_tmp_122.likes
	_cxdatum_tmp_125++
	_cxdatum_tmp_122.likes = _cxdatum_tmp_125
	var _cxdatum_tmp_123 []ui8
	_cxdatum_tmp_123 = serializeStrat(_cxdatum_tmp_122)
	var _cxdatum_tmp_124 bool
	_cxdatum_tmp_124 = cxdatum.store(dbStrats, _cxdatum_tmp_120, _cxdatum_tmp_123)

	var _cxdatum_tmp_126 []ui8
	_cxdatum_tmp_126 = serializeWal(owner)
	var _cxdatum_tmp_127 []ui8
	_cxdatum_tmp_127 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_126)
	var _cxdatum_tmp_128 Account
	if len(_cxdatum_tmp_127) == 0 {
		_cxdatum_tmp_128 = Account{}
	} else {
		_cxdatum_tmp_128 = deserializeAccount(_cxdatum_tmp_127)
	}
	var _cxdatum_tmp_131 []ui8
	_cxdatum_tmp_131 = _cxdatum_tmp_128.likes
	_cxdatum_tmp_131 = shaSliceAppend(_cxdatum_tmp_131, ntxid)
	_cxdatum_tmp_128.likes = _cxdatum_tmp_131
	var _cxdatum_tmp_129 []ui8
	_cxdatum_tmp_129 = serializeAccount(_cxdatum_tmp_128)
	var _cxdatum_tmp_130 bool
	_cxdatum_tmp_130 = cxdatum.store(dbAccounts, _cxdatum_tmp_126, _cxdatum_tmp_129)

	var _cxdatum_tmp_132 []ui8
	_cxdatum_tmp_132 = serializeSha(ntxid)
	var _cxdatum_tmp_133 []ui8
	_cxdatum_tmp_133 = cxdatum.fetch(dbLikes, _cxdatum_tmp_132)
	var _cxdatum_tmp_134 []ui8
	var _cxdatum_tmp_135 i32
	_cxdatum_tmp_134 = deserializeWalSlice(_cxdatum_tmp_133, &_cxdatum_tmp_135)
	_cxdatum_tmp_134 = walSliceAppend(_cxdatum_tmp_134, owner)
	var _cxdatum_tmp_136 []ui8
	_cxdatum_tmp_136 = serializeWalSlice(_cxdatum_tmp_134)
	var _cxdatum_tmp_137 bool
	_cxdatum_tmp_137 = cxdatum.store(dbLikes, _cxdatum_tmp_132, _cxdatum_tmp_136)

	var _cxdatum_tmp_138 []ui8
	_cxdatum_tmp_138 = serializeSha(ntxid)
	var _cxdatum_tmp_139 []ui8
	_cxdatum_tmp_139 = cxdatum.fetch(dbStrats, _cxdatum_tmp_138)
	var _cxdatum_tmp_140 Strat
	if len(_cxdatum_tmp_139) == 0 {
		_cxdatum_tmp_140 = Strat{}
	} else {
		_cxdatum_tmp_140 = deserializeStrat(_cxdatum_tmp_139)
	}
	var nstrat Strat
	nstrat = _cxdatum_tmp_140

	var _cxdatum_tmp_142 []str
	_cxdatum_tmp_142 = nstrat.hashs

	for _cxdatum_tmp_141 := 0; _cxdatum_tmp_141 < len(_cxdatum_tmp_142); _cxdatum_tmp_141++ {
		var hashtg str
		hashtg = _cxdatum_tmp_142[_cxdatum_tmp_141]
		var _cxdatum_tmp_143 []ui8
		_cxdatum_tmp_143 = cxdatum.str2bytes(hashtg)
		var _cxdatum_tmp_144 []ui8
		_cxdatum_tmp_144 = cxdatum.fetch(dbHashtags, _cxdatum_tmp_143)
		var _cxdatum_tmp_145 Hashtag
		if len(_cxdatum_tmp_144) == 0 {
			_cxdatum_tmp_145 = Hashtag{}
		} else {
			_cxdatum_tmp_145 = deserializeHashtag(_cxdatum_tmp_144)
		}
		var _cxdatum_tmp_148 i32
		_cxdatum_tmp_148 = _cxdatum_tmp_145.tlikes
		_cxdatum_tmp_148++
		_cxdatum_tmp_145.tlikes = _cxdatum_tmp_148
		var _cxdatum_tmp_146 []ui8
		_cxdatum_tmp_146 = serializeHashtag(_cxdatum_tmp_145)
		var _cxdatum_tmp_147 bool
		_cxdatum_tmp_147 = cxdatum.store(dbHashtags, _cxdatum_tmp_143, _cxdatum_tmp_146)

	}


}

func processName (owner [25]ui8, txid [32]ui8, nname str) {
	var _cxdatum_tmp_149 []ui8
	_cxdatum_tmp_149 = serializeWal(owner)
	var _cxdatum_tmp_150 []ui8
	_cxdatum_tmp_150 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_149)
	var _cxdatum_tmp_151 Account
	if len(_cxdatum_tmp_150) == 0 {
		_cxdatum_tmp_151 = Account{}
	} else {
		_cxdatum_tmp_151 = deserializeAccount(_cxdatum_tmp_150)
	}
	var _cxdatum_tmp_154 str
	_cxdatum_tmp_154 = _cxdatum_tmp_151.name
	_cxdatum_tmp_154 = nname
	_cxdatum_tmp_151.name = _cxdatum_tmp_154
	var _cxdatum_tmp_152 []ui8
	_cxdatum_tmp_152 = serializeAccount(_cxdatum_tmp_151)
	var _cxdatum_tmp_153 bool
	_cxdatum_tmp_153 = cxdatum.store(dbAccounts, _cxdatum_tmp_149, _cxdatum_tmp_152)

	var _cxdatum_tmp_155 []ui8
	_cxdatum_tmp_155 = cxdatum.str2bytes(nname)
	var _cxdatum_tmp_156 []ui8
	_cxdatum_tmp_156 = serializeWal(owner)
	var _cxdatum_tmp_157 bool
	_cxdatum_tmp_157 = cxdatum.store(dbTheNames, _cxdatum_tmp_155, _cxdatum_tmp_156)

	var _cxdatum_tmp_158 []ui8
	_cxdatum_tmp_158 = serializeWal(owner)
	var _cxdatum_tmp_159 []ui8
	_cxdatum_tmp_159 = cxdatum.fetch(dbWallets, _cxdatum_tmp_158)
	var _cxdatum_tmp_160 str
	var _cxdatum_tmp_161 i32
	_cxdatum_tmp_160 = deserializeStr(_cxdatum_tmp_159, &_cxdatum_tmp_161)
	_cxdatum_tmp_160 = nname
	var _cxdatum_tmp_162 []ui8
	_cxdatum_tmp_162 = serializeStr(_cxdatum_tmp_160)
	var _cxdatum_tmp_163 bool
	_cxdatum_tmp_163 = cxdatum.store(dbWallets, _cxdatum_tmp_158, _cxdatum_tmp_162)

}

func processBio (owner [25]ui8, txid [32]ui8, strat []ui8) {
	var _cxdatum_tmp_164 []ui8
	for _cxdatum_tmp_165 := 29; _cxdatum_tmp_165 < 512 && _cxdatum_tmp_165 < len(strat); _cxdatum_tmp_165++ {
		_cxdatum_tmp_164 = append(_cxdatum_tmp_164, strat[_cxdatum_tmp_165])
	}
	var _cxdatum_tmp_166 str
	_cxdatum_tmp_166 = cxdatum.bytes2str(_cxdatum_tmp_164)
	var nbio str
	nbio = _cxdatum_tmp_166

	var _cxdatum_tmp_167 []ui8
	_cxdatum_tmp_167 = serializeWal(owner)
	var _cxdatum_tmp_168 []ui8
	_cxdatum_tmp_168 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_167)
	var _cxdatum_tmp_169 Account
	if len(_cxdatum_tmp_168) == 0 {
		_cxdatum_tmp_169 = Account{}
	} else {
		_cxdatum_tmp_169 = deserializeAccount(_cxdatum_tmp_168)
	}
	var _cxdatum_tmp_172 str
	_cxdatum_tmp_172 = _cxdatum_tmp_169.bio
	_cxdatum_tmp_172 = nbio
	_cxdatum_tmp_169.bio = _cxdatum_tmp_172
	var _cxdatum_tmp_170 []ui8
	_cxdatum_tmp_170 = serializeAccount(_cxdatum_tmp_169)
	var _cxdatum_tmp_171 bool
	_cxdatum_tmp_171 = cxdatum.store(dbAccounts, _cxdatum_tmp_167, _cxdatum_tmp_170)

}

func processNull () {
}

func processFollow (owner [25]ui8, fllw [25]ui8) {
	var _cxdatum_tmp_173 []ui8
	_cxdatum_tmp_173 = serializeWal(owner)
	var _cxdatum_tmp_174 []ui8
	_cxdatum_tmp_174 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_173)
	var _cxdatum_tmp_175 Account
	if len(_cxdatum_tmp_174) == 0 {
		_cxdatum_tmp_175 = Account{}
	} else {
		_cxdatum_tmp_175 = deserializeAccount(_cxdatum_tmp_174)
	}
	var _cxdatum_tmp_178 []ui8
	_cxdatum_tmp_178 = _cxdatum_tmp_175.following
	_cxdatum_tmp_178 = walSliceAppend(_cxdatum_tmp_178, fllw)
	_cxdatum_tmp_175.following = _cxdatum_tmp_178
	var _cxdatum_tmp_176 []ui8
	_cxdatum_tmp_176 = serializeAccount(_cxdatum_tmp_175)
	var _cxdatum_tmp_177 bool
	_cxdatum_tmp_177 = cxdatum.store(dbAccounts, _cxdatum_tmp_173, _cxdatum_tmp_176)

	var _cxdatum_tmp_179 []ui8
	_cxdatum_tmp_179 = serializeWal(fllw)
	var _cxdatum_tmp_180 []ui8
	_cxdatum_tmp_180 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_179)
	var _cxdatum_tmp_181 Account
	if len(_cxdatum_tmp_180) == 0 {
		_cxdatum_tmp_181 = Account{}
	} else {
		_cxdatum_tmp_181 = deserializeAccount(_cxdatum_tmp_180)
	}
	var _cxdatum_tmp_184 []ui8
	_cxdatum_tmp_184 = _cxdatum_tmp_181.followers
	_cxdatum_tmp_184 = walSliceAppend(_cxdatum_tmp_184, owner)
	_cxdatum_tmp_181.followers = _cxdatum_tmp_184
	var _cxdatum_tmp_182 []ui8
	_cxdatum_tmp_182 = serializeAccount(_cxdatum_tmp_181)
	var _cxdatum_tmp_183 bool
	_cxdatum_tmp_183 = cxdatum.store(dbAccounts, _cxdatum_tmp_179, _cxdatum_tmp_182)

	var _cxdatum_tmp_185 []ui8
	_cxdatum_tmp_185 = serializeWal(owner)
	var _cxdatum_tmp_186 []ui8
	_cxdatum_tmp_186 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_185)
	var _cxdatum_tmp_187 Account
	if len(_cxdatum_tmp_186) == 0 {
		_cxdatum_tmp_187 = Account{}
	} else {
		_cxdatum_tmp_187 = deserializeAccount(_cxdatum_tmp_186)
	}
	var _cxdatum_tmp_190 i32
	_cxdatum_tmp_190 = _cxdatum_tmp_187.fllwngcnt
	_cxdatum_tmp_190++
	_cxdatum_tmp_187.fllwngcnt = _cxdatum_tmp_190
	var _cxdatum_tmp_188 []ui8
	_cxdatum_tmp_188 = serializeAccount(_cxdatum_tmp_187)
	var _cxdatum_tmp_189 bool
	_cxdatum_tmp_189 = cxdatum.store(dbAccounts, _cxdatum_tmp_185, _cxdatum_tmp_188)

	var _cxdatum_tmp_191 []ui8
	_cxdatum_tmp_191 = serializeWal(fllw)
	var _cxdatum_tmp_192 []ui8
	_cxdatum_tmp_192 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_191)
	var _cxdatum_tmp_193 Account
	if len(_cxdatum_tmp_192) == 0 {
		_cxdatum_tmp_193 = Account{}
	} else {
		_cxdatum_tmp_193 = deserializeAccount(_cxdatum_tmp_192)
	}
	var _cxdatum_tmp_196 i32
	_cxdatum_tmp_196 = _cxdatum_tmp_193.followcnt
	_cxdatum_tmp_196++
	_cxdatum_tmp_193.followcnt = _cxdatum_tmp_196
	var _cxdatum_tmp_194 []ui8
	_cxdatum_tmp_194 = serializeAccount(_cxdatum_tmp_193)
	var _cxdatum_tmp_195 bool
	_cxdatum_tmp_195 = cxdatum.store(dbAccounts, _cxdatum_tmp_191, _cxdatum_tmp_194)

}

func processStrat (strato Strat) {
	var _cxdatum_tmp_197 [32]ui8
	_cxdatum_tmp_197 = strato.obj
	var txid [32]ui8
	txid = _cxdatum_tmp_197

	var _cxdatum_tmp_198 [25]ui8
	_cxdatum_tmp_198 = strato.owner
	var owner [25]ui8
	owner = _cxdatum_tmp_198

	var _cxdatum_tmp_199 []ui8
	_cxdatum_tmp_199 = serializeSha(txid)
	var _cxdatum_tmp_200 []ui8
	_cxdatum_tmp_200 = serializeStrat(strato)
	var _cxdatum_tmp_201 bool
	_cxdatum_tmp_201 = cxdatum.store(dbStrats, _cxdatum_tmp_199, _cxdatum_tmp_200)

	var _cxdatum_tmp_202 str
	_cxdatum_tmp_202 = "all"
	var _cxdatum_tmp_203 []ui8
	_cxdatum_tmp_203 = cxdatum.str2bytes(_cxdatum_tmp_202)
	var _cxdatum_tmp_204 []ui8
	_cxdatum_tmp_204 = cxdatum.fetch(dbAllStrats, _cxdatum_tmp_203)
	var _cxdatum_tmp_205 []ui8
	var _cxdatum_tmp_206 i32
	_cxdatum_tmp_205 = deserializeShaSlice(_cxdatum_tmp_204, &_cxdatum_tmp_206)
	_cxdatum_tmp_205 = shaSliceAppend(_cxdatum_tmp_205, txid)
	var _cxdatum_tmp_207 []ui8
	_cxdatum_tmp_207 = serializeShaSlice(_cxdatum_tmp_205)
	var _cxdatum_tmp_208 bool
	_cxdatum_tmp_208 = cxdatum.store(dbAllStrats, _cxdatum_tmp_203, _cxdatum_tmp_207)

	var _cxdatum_tmp_209 []ui8
	_cxdatum_tmp_209 = serializeWal(owner)
	var _cxdatum_tmp_210 []ui8
	_cxdatum_tmp_210 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_209)
	var _cxdatum_tmp_211 Account
	if len(_cxdatum_tmp_210) == 0 {
		_cxdatum_tmp_211 = Account{}
	} else {
		_cxdatum_tmp_211 = deserializeAccount(_cxdatum_tmp_210)
	}
	var accnt Account
	accnt = _cxdatum_tmp_211

	var _cxdatum_tmp_212 str
	_cxdatum_tmp_212 = accnt.name
	var _cxdatum_tmp_213 str
	_cxdatum_tmp_213 = ""
	if _cxdatum_tmp_212 == _cxdatum_tmp_213 {
		var _cxdatum_tmp_214 str
		_cxdatum_tmp_214 = accnt.name
		var _cxdatum_tmp_215 str
		_cxdatum_tmp_215 = cxdatum.rdaddress(owner)
		_cxdatum_tmp_214 = _cxdatum_tmp_215
		accnt.name = _cxdatum_tmp_214

		var _cxdatum_tmp_216 str
		_cxdatum_tmp_216 = accnt.cname
		var _cxdatum_tmp_217 str
		_cxdatum_tmp_217 = cxdatum.rdaddress(owner)
		_cxdatum_tmp_216 = _cxdatum_tmp_217
		accnt.cname = _cxdatum_tmp_216

		var _cxdatum_tmp_218 [25]ui8
		_cxdatum_tmp_218 = accnt.id
		_cxdatum_tmp_218 = owner
		accnt.id = _cxdatum_tmp_218

		var _cxdatum_tmp_219 str
		_cxdatum_tmp_219 = accnt.pfp
		var _cxdatum_tmp_220 str
		_cxdatum_tmp_220 = "https://pbs.twimg.com/profile_images/914714384420659200/Fe9Tn_my_400x400.jpg"
		_cxdatum_tmp_219 = _cxdatum_tmp_220
		accnt.pfp = _cxdatum_tmp_219

		var _cxdatum_tmp_221 str
		_cxdatum_tmp_221 = cxdatum.rdaddress(owner)
		var _cxdatum_tmp_222 []ui8
		_cxdatum_tmp_222 = serializeWal(owner)
		var _cxdatum_tmp_223 []ui8
		_cxdatum_tmp_223 = serializeStr(_cxdatum_tmp_221)
		var _cxdatum_tmp_224 bool
		_cxdatum_tmp_224 = cxdatum.store(dbWallets, _cxdatum_tmp_222, _cxdatum_tmp_223)

		var _cxdatum_tmp_225 str
		_cxdatum_tmp_225 = cxdatum.rdaddress(owner)
		var _cxdatum_tmp_226 []ui8
		_cxdatum_tmp_226 = cxdatum.str2bytes(_cxdatum_tmp_225)
		var _cxdatum_tmp_227 []ui8
		_cxdatum_tmp_227 = serializeWal(owner)
		var _cxdatum_tmp_228 bool
		_cxdatum_tmp_228 = cxdatum.store(dbTheNames, _cxdatum_tmp_226, _cxdatum_tmp_227)

	} 

	var _cxdatum_tmp_229 []ui8
	_cxdatum_tmp_229 = accnt.strats
	_cxdatum_tmp_229 = shaSliceAppend(_cxdatum_tmp_229, txid)
	accnt.strats = _cxdatum_tmp_229

	var _cxdatum_tmp_230 []ui8
	_cxdatum_tmp_230 = serializeWal(owner)
	var _cxdatum_tmp_231 []ui8
	_cxdatum_tmp_231 = serializeAccount(accnt)
	var _cxdatum_tmp_232 bool
	_cxdatum_tmp_232 = cxdatum.store(dbAccounts, _cxdatum_tmp_230, _cxdatum_tmp_231)

	var _cxdatum_tmp_234 []ui8
	_cxdatum_tmp_234 = strato.tags

	for _cxdatum_tmp_233 := 0; _cxdatum_tmp_233 < len(_cxdatum_tmp_234) / 25; _cxdatum_tmp_233++ {
		var tag [25]ui8
		tag = walSliceIndex(_cxdatum_tmp_234, _cxdatum_tmp_233)
		var _cxdatum_tmp_235 []ui8
		_cxdatum_tmp_235 = serializeWal(tag)
		var _cxdatum_tmp_236 []ui8
		_cxdatum_tmp_236 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_235)
		var _cxdatum_tmp_237 Account
		if len(_cxdatum_tmp_236) == 0 {
			_cxdatum_tmp_237 = Account{}
		} else {
			_cxdatum_tmp_237 = deserializeAccount(_cxdatum_tmp_236)
		}
		var _cxdatum_tmp_240 []ui8
		_cxdatum_tmp_240 = _cxdatum_tmp_237.tags
		_cxdatum_tmp_240 = shaSliceAppend(_cxdatum_tmp_240, txid)
		_cxdatum_tmp_237.tags = _cxdatum_tmp_240
		var _cxdatum_tmp_238 []ui8
		_cxdatum_tmp_238 = serializeAccount(_cxdatum_tmp_237)
		var _cxdatum_tmp_239 bool
		_cxdatum_tmp_239 = cxdatum.store(dbAccounts, _cxdatum_tmp_235, _cxdatum_tmp_238)

	}


	var _cxdatum_tmp_242 []str
	_cxdatum_tmp_242 = strato.hashs

	for _cxdatum_tmp_241 := 0; _cxdatum_tmp_241 < len(_cxdatum_tmp_242); _cxdatum_tmp_241++ {
		var hashtg str
		hashtg = _cxdatum_tmp_242[_cxdatum_tmp_241]
		var _cxdatum_tmp_243 []ui8
		_cxdatum_tmp_243 = cxdatum.str2bytes(hashtg)
		var _cxdatum_tmp_244 []ui8
		_cxdatum_tmp_244 = cxdatum.fetch(dbHashtags, _cxdatum_tmp_243)
		var _cxdatum_tmp_245 Hashtag
		if len(_cxdatum_tmp_244) == 0 {
			_cxdatum_tmp_245 = Hashtag{}
		} else {
			_cxdatum_tmp_245 = deserializeHashtag(_cxdatum_tmp_244)
		}
		var hashobj Hashtag
		hashobj = _cxdatum_tmp_245

		var _cxdatum_tmp_246 str
		_cxdatum_tmp_246 = hashobj.name
		var _cxdatum_tmp_247 str
		_cxdatum_tmp_247 = ""
		if _cxdatum_tmp_246 == _cxdatum_tmp_247 {
			var _cxdatum_tmp_248 str
			_cxdatum_tmp_248 = hashobj.name
			_cxdatum_tmp_248 = hashtg
			hashobj.name = _cxdatum_tmp_248

		} 

		var _cxdatum_tmp_249 []ui8
		_cxdatum_tmp_249 = hashobj.strats
		_cxdatum_tmp_249 = shaSliceAppend(_cxdatum_tmp_249, txid)
		hashobj.strats = _cxdatum_tmp_249

		var _cxdatum_tmp_250 []ui8
		_cxdatum_tmp_250 = cxdatum.str2bytes(hashtg)
		var _cxdatum_tmp_251 []ui8
		_cxdatum_tmp_251 = serializeHashtag(hashobj)
		var _cxdatum_tmp_252 bool
		_cxdatum_tmp_252 = cxdatum.store(dbHashtags, _cxdatum_tmp_250, _cxdatum_tmp_251)

	}


}

func processRestrat (owner [25]ui8, txid [32]ui8, strat []ui8) {
	var _cxdatum_tmp_253 []ui8
	for _cxdatum_tmp_254 := 29; _cxdatum_tmp_254 < 93 && _cxdatum_tmp_254 < len(strat); _cxdatum_tmp_254++ {
		_cxdatum_tmp_253 = append(_cxdatum_tmp_253, strat[_cxdatum_tmp_254])
	}
	var _cxdatum_tmp_255 str
	_cxdatum_tmp_255 = cxdatum.bytes2str(_cxdatum_tmp_253)
	var _cxdatum_tmp_256 [32]ui8
	_cxdatum_tmp_256 = stringToSha(_cxdatum_tmp_255)
	var ntxid [32]ui8
	ntxid = _cxdatum_tmp_256

	var _cxdatum_tmp_257 []ui8
	_cxdatum_tmp_257 = serializeSha(ntxid)
	var _cxdatum_tmp_258 []ui8
	_cxdatum_tmp_258 = cxdatum.fetch(dbStrats, _cxdatum_tmp_257)
	var _cxdatum_tmp_259 Strat
	if len(_cxdatum_tmp_258) == 0 {
		_cxdatum_tmp_259 = Strat{}
	} else {
		_cxdatum_tmp_259 = deserializeStrat(_cxdatum_tmp_258)
	}
	var _cxdatum_tmp_262 i32
	_cxdatum_tmp_262 = _cxdatum_tmp_259.restrats
	_cxdatum_tmp_262++
	_cxdatum_tmp_259.restrats = _cxdatum_tmp_262
	var _cxdatum_tmp_260 []ui8
	_cxdatum_tmp_260 = serializeStrat(_cxdatum_tmp_259)
	var _cxdatum_tmp_261 bool
	_cxdatum_tmp_261 = cxdatum.store(dbStrats, _cxdatum_tmp_257, _cxdatum_tmp_260)

	var _cxdatum_tmp_263 []ui8
	_cxdatum_tmp_263 = serializeWal(owner)
	var _cxdatum_tmp_264 []ui8
	_cxdatum_tmp_264 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_263)
	var _cxdatum_tmp_265 Account
	if len(_cxdatum_tmp_264) == 0 {
		_cxdatum_tmp_265 = Account{}
	} else {
		_cxdatum_tmp_265 = deserializeAccount(_cxdatum_tmp_264)
	}
	var _cxdatum_tmp_268 []ui8
	_cxdatum_tmp_268 = _cxdatum_tmp_265.restrats
	_cxdatum_tmp_268 = shaSliceAppend(_cxdatum_tmp_268, ntxid)
	_cxdatum_tmp_265.restrats = _cxdatum_tmp_268
	var _cxdatum_tmp_266 []ui8
	_cxdatum_tmp_266 = serializeAccount(_cxdatum_tmp_265)
	var _cxdatum_tmp_267 bool
	_cxdatum_tmp_267 = cxdatum.store(dbAccounts, _cxdatum_tmp_263, _cxdatum_tmp_266)

	var _cxdatum_tmp_269 []ui8
	_cxdatum_tmp_269 = serializeSha(ntxid)
	var _cxdatum_tmp_270 []ui8
	_cxdatum_tmp_270 = cxdatum.fetch(dbRestrats, _cxdatum_tmp_269)
	var _cxdatum_tmp_271 []ui8
	var _cxdatum_tmp_272 i32
	_cxdatum_tmp_271 = deserializeWalSlice(_cxdatum_tmp_270, &_cxdatum_tmp_272)
	_cxdatum_tmp_271 = walSliceAppend(_cxdatum_tmp_271, owner)
	var _cxdatum_tmp_273 []ui8
	_cxdatum_tmp_273 = serializeWalSlice(_cxdatum_tmp_271)
	var _cxdatum_tmp_274 bool
	_cxdatum_tmp_274 = cxdatum.store(dbRestrats, _cxdatum_tmp_269, _cxdatum_tmp_273)

	var _cxdatum_tmp_275 []ui8
	_cxdatum_tmp_275 = serializeSha(ntxid)
	var _cxdatum_tmp_276 []ui8
	_cxdatum_tmp_276 = cxdatum.fetch(dbStrats, _cxdatum_tmp_275)
	var _cxdatum_tmp_277 Strat
	if len(_cxdatum_tmp_276) == 0 {
		_cxdatum_tmp_277 = Strat{}
	} else {
		_cxdatum_tmp_277 = deserializeStrat(_cxdatum_tmp_276)
	}
	var nstrat Strat
	nstrat = _cxdatum_tmp_277

	var _cxdatum_tmp_279 []str
	_cxdatum_tmp_279 = nstrat.hashs

	for _cxdatum_tmp_278 := 0; _cxdatum_tmp_278 < len(_cxdatum_tmp_279); _cxdatum_tmp_278++ {
		var hashtg str
		hashtg = _cxdatum_tmp_279[_cxdatum_tmp_278]
		var _cxdatum_tmp_280 []ui8
		_cxdatum_tmp_280 = cxdatum.str2bytes(hashtg)
		var _cxdatum_tmp_281 []ui8
		_cxdatum_tmp_281 = cxdatum.fetch(dbHashtags, _cxdatum_tmp_280)
		var _cxdatum_tmp_282 Hashtag
		if len(_cxdatum_tmp_281) == 0 {
			_cxdatum_tmp_282 = Hashtag{}
		} else {
			_cxdatum_tmp_282 = deserializeHashtag(_cxdatum_tmp_281)
		}
		var _cxdatum_tmp_285 i32
		_cxdatum_tmp_285 = _cxdatum_tmp_282.trestrats
		_cxdatum_tmp_285++
		_cxdatum_tmp_282.trestrats = _cxdatum_tmp_285
		var _cxdatum_tmp_283 []ui8
		_cxdatum_tmp_283 = serializeHashtag(_cxdatum_tmp_282)
		var _cxdatum_tmp_284 bool
		_cxdatum_tmp_284 = cxdatum.store(dbHashtags, _cxdatum_tmp_280, _cxdatum_tmp_283)

	}


}

func processPfp (owner [25]ui8, txid [32]ui8, strat []ui8) {
	var _cxdatum_tmp_286 []ui8
	for _cxdatum_tmp_287 := 29; _cxdatum_tmp_287 < 512 && _cxdatum_tmp_287 < len(strat); _cxdatum_tmp_287++ {
		_cxdatum_tmp_286 = append(_cxdatum_tmp_286, strat[_cxdatum_tmp_287])
	}
	var _cxdatum_tmp_288 str
	_cxdatum_tmp_288 = cxdatum.bytes2str(_cxdatum_tmp_286)
	var npfp str
	npfp = _cxdatum_tmp_288

	var _cxdatum_tmp_289 []ui8
	_cxdatum_tmp_289 = serializeWal(owner)
	var _cxdatum_tmp_290 []ui8
	_cxdatum_tmp_290 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_289)
	var _cxdatum_tmp_291 Account
	if len(_cxdatum_tmp_290) == 0 {
		_cxdatum_tmp_291 = Account{}
	} else {
		_cxdatum_tmp_291 = deserializeAccount(_cxdatum_tmp_290)
	}
	var _cxdatum_tmp_294 str
	_cxdatum_tmp_294 = _cxdatum_tmp_291.pfp
	_cxdatum_tmp_294 = npfp
	_cxdatum_tmp_291.pfp = _cxdatum_tmp_294
	var _cxdatum_tmp_292 []ui8
	_cxdatum_tmp_292 = serializeAccount(_cxdatum_tmp_291)
	var _cxdatum_tmp_293 bool
	_cxdatum_tmp_293 = cxdatum.store(dbAccounts, _cxdatum_tmp_289, _cxdatum_tmp_292)

}

func processReply (owner [25]ui8, txid [32]ui8, strat []ui8, tags []ui8, hashs []str) {
	var _cxdatum_tmp_295 []ui8
	for _cxdatum_tmp_296 := 29; _cxdatum_tmp_296 < 93 && _cxdatum_tmp_296 < len(strat); _cxdatum_tmp_296++ {
		_cxdatum_tmp_295 = append(_cxdatum_tmp_295, strat[_cxdatum_tmp_296])
	}
	var _cxdatum_tmp_297 str
	_cxdatum_tmp_297 = cxdatum.bytes2str(_cxdatum_tmp_295)
	var _cxdatum_tmp_298 [32]ui8
	_cxdatum_tmp_298 = stringToSha(_cxdatum_tmp_297)
	var ntxid [32]ui8
	ntxid = _cxdatum_tmp_298

	var _cxdatum_tmp_299 []ui8
	for _cxdatum_tmp_300 := 93; _cxdatum_tmp_300 < 512 && _cxdatum_tmp_300 < len(strat); _cxdatum_tmp_300++ {
		_cxdatum_tmp_299 = append(_cxdatum_tmp_299, strat[_cxdatum_tmp_300])
	}
	var _cxdatum_tmp_301 str
	_cxdatum_tmp_301 = cxdatum.bytes2str(_cxdatum_tmp_299)
	var ntxt str
	ntxt = _cxdatum_tmp_301

	var _cxdatum_tmp_302 Strat
	_cxdatum_tmp_302 = Strat{}
	var strato Strat
	strato = _cxdatum_tmp_302

	var _cxdatum_tmp_303 [25]ui8
	_cxdatum_tmp_303 = strato.owner
	_cxdatum_tmp_303 = owner
	strato.owner = _cxdatum_tmp_303

	var _cxdatum_tmp_304 [32]ui8
	_cxdatum_tmp_304 = strato.obj
	_cxdatum_tmp_304 = txid
	strato.obj = _cxdatum_tmp_304

	var _cxdatum_tmp_305 str
	_cxdatum_tmp_305 = strato.txt
	_cxdatum_tmp_305 = ntxt
	strato.txt = _cxdatum_tmp_305

	var _cxdatum_tmp_306 []ui8
	_cxdatum_tmp_306 = strato.tags
	_cxdatum_tmp_306 = tags
	strato.tags = _cxdatum_tmp_306

	var _cxdatum_tmp_307 []str
	_cxdatum_tmp_307 = strato.hashs
	_cxdatum_tmp_307 = hashs
	strato.hashs = _cxdatum_tmp_307

	var _cxdatum_tmp_308 [32]ui8
	_cxdatum_tmp_308 = strato.rplto
	_cxdatum_tmp_308 = ntxid
	strato.rplto = _cxdatum_tmp_308

	var _cxdatum_tmp_309 []ui8
	_cxdatum_tmp_309 = serializeSha(txid)
	var _cxdatum_tmp_310 []ui8
	_cxdatum_tmp_310 = serializeStrat(strato)
	var _cxdatum_tmp_311 bool
	_cxdatum_tmp_311 = cxdatum.store(dbStrats, _cxdatum_tmp_309, _cxdatum_tmp_310)

	var _cxdatum_tmp_312 []ui8
	_cxdatum_tmp_312 = serializeSha(ntxid)
	var _cxdatum_tmp_313 []ui8
	_cxdatum_tmp_313 = cxdatum.fetch(dbReplies, _cxdatum_tmp_312)
	var _cxdatum_tmp_314 []ui8
	var _cxdatum_tmp_315 i32
	_cxdatum_tmp_314 = deserializeShaSlice(_cxdatum_tmp_313, &_cxdatum_tmp_315)
	_cxdatum_tmp_314 = shaSliceAppend(_cxdatum_tmp_314, txid)
	var _cxdatum_tmp_316 []ui8
	_cxdatum_tmp_316 = serializeShaSlice(_cxdatum_tmp_314)
	var _cxdatum_tmp_317 bool
	_cxdatum_tmp_317 = cxdatum.store(dbReplies, _cxdatum_tmp_312, _cxdatum_tmp_316)

	var _cxdatum_tmp_318 []ui8
	_cxdatum_tmp_318 = serializeWal(owner)
	var _cxdatum_tmp_319 []ui8
	_cxdatum_tmp_319 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_318)
	var _cxdatum_tmp_320 Account
	if len(_cxdatum_tmp_319) == 0 {
		_cxdatum_tmp_320 = Account{}
	} else {
		_cxdatum_tmp_320 = deserializeAccount(_cxdatum_tmp_319)
	}
	var accnt Account
	accnt = _cxdatum_tmp_320

	var _cxdatum_tmp_321 str
	_cxdatum_tmp_321 = accnt.name
	var _cxdatum_tmp_322 str
	_cxdatum_tmp_322 = ""
	if _cxdatum_tmp_321 == _cxdatum_tmp_322 {
		var _cxdatum_tmp_323 str
		_cxdatum_tmp_323 = accnt.name
		var _cxdatum_tmp_324 str
		_cxdatum_tmp_324 = cxdatum.rdaddress(owner)
		_cxdatum_tmp_323 = _cxdatum_tmp_324
		accnt.name = _cxdatum_tmp_323

		var _cxdatum_tmp_325 str
		_cxdatum_tmp_325 = accnt.cname
		var _cxdatum_tmp_326 str
		_cxdatum_tmp_326 = cxdatum.rdaddress(owner)
		_cxdatum_tmp_325 = _cxdatum_tmp_326
		accnt.cname = _cxdatum_tmp_325

		var _cxdatum_tmp_327 [25]ui8
		_cxdatum_tmp_327 = accnt.id
		_cxdatum_tmp_327 = owner
		accnt.id = _cxdatum_tmp_327

		var _cxdatum_tmp_328 str
		_cxdatum_tmp_328 = accnt.pfp
		var _cxdatum_tmp_329 str
		_cxdatum_tmp_329 = "https://pbs.twimg.com/profile_images/914714384420659200/Fe9Tn_my_400x400.jpg"
		_cxdatum_tmp_328 = _cxdatum_tmp_329
		accnt.pfp = _cxdatum_tmp_328

		var _cxdatum_tmp_330 str
		_cxdatum_tmp_330 = cxdatum.rdaddress(owner)
		var _cxdatum_tmp_331 []ui8
		_cxdatum_tmp_331 = serializeWal(owner)
		var _cxdatum_tmp_332 []ui8
		_cxdatum_tmp_332 = serializeStr(_cxdatum_tmp_330)
		var _cxdatum_tmp_333 bool
		_cxdatum_tmp_333 = cxdatum.store(dbWallets, _cxdatum_tmp_331, _cxdatum_tmp_332)

		var _cxdatum_tmp_334 str
		_cxdatum_tmp_334 = cxdatum.rdaddress(owner)
		var _cxdatum_tmp_335 []ui8
		_cxdatum_tmp_335 = cxdatum.str2bytes(_cxdatum_tmp_334)
		var _cxdatum_tmp_336 []ui8
		_cxdatum_tmp_336 = serializeWal(owner)
		var _cxdatum_tmp_337 bool
		_cxdatum_tmp_337 = cxdatum.store(dbTheNames, _cxdatum_tmp_335, _cxdatum_tmp_336)

	} 

	var _cxdatum_tmp_338 []ui8
	_cxdatum_tmp_338 = accnt.strats
	_cxdatum_tmp_338 = shaSliceAppend(_cxdatum_tmp_338, txid)
	accnt.strats = _cxdatum_tmp_338

	var _cxdatum_tmp_339 []ui8
	_cxdatum_tmp_339 = serializeWal(owner)
	var _cxdatum_tmp_340 []ui8
	_cxdatum_tmp_340 = serializeAccount(accnt)
	var _cxdatum_tmp_341 bool
	_cxdatum_tmp_341 = cxdatum.store(dbAccounts, _cxdatum_tmp_339, _cxdatum_tmp_340)

	var _cxdatum_tmp_343 []ui8
	_cxdatum_tmp_343 = strato.tags

	for _cxdatum_tmp_342 := 0; _cxdatum_tmp_342 < len(_cxdatum_tmp_343) / 25; _cxdatum_tmp_342++ {
		var tag [25]ui8
		tag = walSliceIndex(_cxdatum_tmp_343, _cxdatum_tmp_342)
		var _cxdatum_tmp_344 []ui8
		_cxdatum_tmp_344 = serializeWal(tag)
		var _cxdatum_tmp_345 []ui8
		_cxdatum_tmp_345 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_344)
		var _cxdatum_tmp_346 Account
		if len(_cxdatum_tmp_345) == 0 {
			_cxdatum_tmp_346 = Account{}
		} else {
			_cxdatum_tmp_346 = deserializeAccount(_cxdatum_tmp_345)
		}
		var _cxdatum_tmp_349 []ui8
		_cxdatum_tmp_349 = _cxdatum_tmp_346.tags
		_cxdatum_tmp_349 = shaSliceAppend(_cxdatum_tmp_349, txid)
		_cxdatum_tmp_346.tags = _cxdatum_tmp_349
		var _cxdatum_tmp_347 []ui8
		_cxdatum_tmp_347 = serializeAccount(_cxdatum_tmp_346)
		var _cxdatum_tmp_348 bool
		_cxdatum_tmp_348 = cxdatum.store(dbAccounts, _cxdatum_tmp_344, _cxdatum_tmp_347)

	}


	var _cxdatum_tmp_351 []str
	_cxdatum_tmp_351 = strato.hashs

	for _cxdatum_tmp_350 := 0; _cxdatum_tmp_350 < len(_cxdatum_tmp_351); _cxdatum_tmp_350++ {
		var hashtg str
		hashtg = _cxdatum_tmp_351[_cxdatum_tmp_350]
		var _cxdatum_tmp_352 []ui8
		_cxdatum_tmp_352 = cxdatum.str2bytes(hashtg)
		var _cxdatum_tmp_353 []ui8
		_cxdatum_tmp_353 = cxdatum.fetch(dbHashtags, _cxdatum_tmp_352)
		var _cxdatum_tmp_354 Hashtag
		if len(_cxdatum_tmp_353) == 0 {
			_cxdatum_tmp_354 = Hashtag{}
		} else {
			_cxdatum_tmp_354 = deserializeHashtag(_cxdatum_tmp_353)
		}
		var hashobj Hashtag
		hashobj = _cxdatum_tmp_354

		var _cxdatum_tmp_355 str
		_cxdatum_tmp_355 = hashobj.name
		var _cxdatum_tmp_356 str
		_cxdatum_tmp_356 = ""
		if _cxdatum_tmp_355 == _cxdatum_tmp_356 {
			var _cxdatum_tmp_357 str
			_cxdatum_tmp_357 = hashobj.name
			_cxdatum_tmp_357 = hashtg
			hashobj.name = _cxdatum_tmp_357

		} 

		var _cxdatum_tmp_358 []ui8
		_cxdatum_tmp_358 = hashobj.strats
		_cxdatum_tmp_358 = shaSliceAppend(_cxdatum_tmp_358, txid)
		hashobj.strats = _cxdatum_tmp_358

	}


}

func ProcessIncoming (obj []ui8) {
	var _cxdatum_tmp_359 Strat
	_cxdatum_tmp_359 = Strat{}
	var strato Strat
	strato = _cxdatum_tmp_359

	var _cxdatum_tmp_360 Strat
	_cxdatum_tmp_360 = deserializeStrat(obj)
	strato = _cxdatum_tmp_360

	var _cxdatum_tmp_361 [25]ui8
	_cxdatum_tmp_361 = strato.owner
	var owner [25]ui8
	owner = _cxdatum_tmp_361

	var _cxdatum_tmp_362 [32]ui8
	_cxdatum_tmp_362 = strato.obj
	var txid [32]ui8
	txid = _cxdatum_tmp_362

	var _cxdatum_tmp_363 str
	_cxdatum_tmp_363 = strato.txt
	var _cxdatum_tmp_364 []ui8
	_cxdatum_tmp_364 = cxdatum.str2bytes(_cxdatum_tmp_363)
	var strat []ui8
	strat = _cxdatum_tmp_364

	var _cxdatum_tmp_365 []ui8
	for _cxdatum_tmp_366 := 0; _cxdatum_tmp_366 < 27 && _cxdatum_tmp_366 < len(strat); _cxdatum_tmp_366++ {
		_cxdatum_tmp_365 = append(_cxdatum_tmp_365, strat[_cxdatum_tmp_366])
	}
	var _cxdatum_tmp_367 str
	_cxdatum_tmp_367 = cxdatum.bytes2str(_cxdatum_tmp_365)
	var _cxdatum_tmp_368 str
	_cxdatum_tmp_368 = "<|::[]CXTWEET_LIKELIK[]::|>"
	var _cxdatum_tmp_369 str
	_cxdatum_tmp_369 = "<|::[]CXTWEET_RETWEET[]::|>"
	if _cxdatum_tmp_367 == _cxdatum_tmp_368 {
		processNull()

		return

	} else if _cxdatum_tmp_367 == _cxdatum_tmp_369 {
		processNull()

		return

	} 

	var _cxdatum_tmp_370 []ui8
	for _cxdatum_tmp_371 := 0; _cxdatum_tmp_371 < 29 && _cxdatum_tmp_371 < len(strat); _cxdatum_tmp_371++ {
		_cxdatum_tmp_370 = append(_cxdatum_tmp_370, strat[_cxdatum_tmp_371])
	}
	var _cxdatum_tmp_372 str
	_cxdatum_tmp_372 = cxdatum.bytes2str(_cxdatum_tmp_370)
	var _cxdatum_tmp_373 str
	_cxdatum_tmp_373 = "<|::[]CXSTRATUS_LIKELIK[]::|>"
	var _cxdatum_tmp_374 str
	_cxdatum_tmp_374 = "<|::[]CXSTRATUS_RESTRAT[]::|>"
	var _cxdatum_tmp_375 str
	_cxdatum_tmp_375 = "<|::[]CXSTRATUS_NAMENAM[]::|>"
	var _cxdatum_tmp_376 str
	_cxdatum_tmp_376 = "<|::[]CXSTRATUS_BIOBIOB[]::|>"
	var _cxdatum_tmp_377 str
	_cxdatum_tmp_377 = "<|::[]CXSTRATUS_PFPPFPP[]::|>"
	var _cxdatum_tmp_378 str
	_cxdatum_tmp_378 = "<|::[]CXSTRATUS_REPLYRE[]::|>"
	var _cxdatum_tmp_379 str
	_cxdatum_tmp_379 = "<|::[]CXSTRATUS_FOLLOWF[]::|>"
	if _cxdatum_tmp_372 == _cxdatum_tmp_373 {
		processLike(owner, txid, strat)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_374 {
		processRestrat(owner, txid, strat)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_375 {
		var _cxdatum_tmp_380 str
		_cxdatum_tmp_380 = strato.pname
		processName(owner, txid, _cxdatum_tmp_380)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_376 {
		processBio(owner, txid, strat)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_377 {
		processPfp(owner, txid, strat)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_378 {
		var _cxdatum_tmp_381 []ui8
		_cxdatum_tmp_381 = strato.tags
		var _cxdatum_tmp_382 []str
		_cxdatum_tmp_382 = strato.hashs
		processReply(owner, txid, strat, _cxdatum_tmp_381, _cxdatum_tmp_382)

		return

	} else if _cxdatum_tmp_372 == _cxdatum_tmp_379 {
		var _cxdatum_tmp_383 [25]ui8
		_cxdatum_tmp_383 = strato.follow
		processFollow(owner, _cxdatum_tmp_383)

		return

	} 

	processStrat(strato)

}



func makeLike (like [32]ui8) (out []ui8) {
	var likeok i32
	var _cxdatum_tmp_384 str
	_cxdatum_tmp_384 = "<|::[]CXSTRATUS_LIKELIK[]::|>"
	var _cxdatum_tmp_385 []ui8
	_cxdatum_tmp_385 = cxdatum.str2bytes(_cxdatum_tmp_384)
	var _cxdatum_tmp_386 [93]ui8
	for _cxdatum_tmp_387 := 0; _cxdatum_tmp_387 < len(_cxdatum_tmp_385); _cxdatum_tmp_387++ {
		_cxdatum_tmp_386[_cxdatum_tmp_387] = _cxdatum_tmp_385[_cxdatum_tmp_387]
	}
	var msglike [93]ui8
	msglike = _cxdatum_tmp_386

	var _cxdatum_tmp_388 []ui8
	for _cxdatum_tmp_389 := 29; _cxdatum_tmp_389 < 93 && _cxdatum_tmp_389 < len(msglike); _cxdatum_tmp_389++ {
		_cxdatum_tmp_388 = append(_cxdatum_tmp_388, msglike[_cxdatum_tmp_389])
	}
	var _cxdatum_tmp_391 str
	_cxdatum_tmp_391 = shaToHex(like)
	var _cxdatum_tmp_392 []ui8
	_cxdatum_tmp_392 = cxdatum.str2bytes(_cxdatum_tmp_391)
	_cxdatum_tmp_388 = _cxdatum_tmp_392
	for _cxdatum_tmp_390 := 0; _cxdatum_tmp_390 < 64 && _cxdatum_tmp_390 < len(_cxdatum_tmp_388); _cxdatum_tmp_390++ {
		msglike[_cxdatum_tmp_390 + 29] = _cxdatum_tmp_388[_cxdatum_tmp_390]
	}

	var _cxdatum_tmp_393 []ui8
	for _cxdatum_tmp_394 := 0; _cxdatum_tmp_394 < 93; _cxdatum_tmp_394++ {
		_cxdatum_tmp_393 = append(_cxdatum_tmp_393, msglike[_cxdatum_tmp_394])
	}
	var _cxdatum_tmp_395 bool
	_cxdatum_tmp_395 = cxdatum.transact(_cxdatum_tmp_393)

	var _cxdatum_tmp_396 i32
	_cxdatum_tmp_396 = 0
	likeok = _cxdatum_tmp_396

	var _cxdatum_tmp_397 makeLike_arg_EgressReturn
	_cxdatum_tmp_397 = makeLike_arg_EgressReturn{}
	_cxdatum_tmp_397.likeok = likeok
	out = serializemakeLike_arg_EgressReturn(_cxdatum_tmp_397)
}

func getStrat (txid [32]ui8) (out []ui8) {
	var strato Strat
	var _cxdatum_tmp_398 []ui8
	_cxdatum_tmp_398 = serializeSha(txid)
	var _cxdatum_tmp_399 []ui8
	_cxdatum_tmp_399 = cxdatum.fetch(dbStrats, _cxdatum_tmp_398)
	var _cxdatum_tmp_400 Strat
	if len(_cxdatum_tmp_399) == 0 {
		_cxdatum_tmp_400 = Strat{}
	} else {
		_cxdatum_tmp_400 = deserializeStrat(_cxdatum_tmp_399)
	}
	strato = _cxdatum_tmp_400

	var _cxdatum_tmp_401 getStrat_arg_EgressReturn
	_cxdatum_tmp_401 = getStrat_arg_EgressReturn{}
	_cxdatum_tmp_401.strato = strato
	out = serializegetStrat_arg_EgressReturn(_cxdatum_tmp_401)
}

func getAccount (owner [25]ui8) (out []ui8) {
	var accnt Account
	var _cxdatum_tmp_402 []ui8
	_cxdatum_tmp_402 = serializeWal(owner)
	var _cxdatum_tmp_403 []ui8
	_cxdatum_tmp_403 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_402)
	var _cxdatum_tmp_404 Account
	if len(_cxdatum_tmp_403) == 0 {
		_cxdatum_tmp_404 = Account{}
	} else {
		_cxdatum_tmp_404 = deserializeAccount(_cxdatum_tmp_403)
	}
	accnt = _cxdatum_tmp_404

	var _cxdatum_tmp_405 getAccount_arg_EgressReturn
	_cxdatum_tmp_405 = getAccount_arg_EgressReturn{}
	_cxdatum_tmp_405.accnt = accnt
	out = serializegetAccount_arg_EgressReturn(_cxdatum_tmp_405)
}

func makeStrat (strat str) (out []ui8) {
	var stratok i32
	var _cxdatum_tmp_406 []ui8
	_cxdatum_tmp_406 = cxdatum.str2bytes(strat)
	var _cxdatum_tmp_407 bool
	_cxdatum_tmp_407 = cxdatum.transact(_cxdatum_tmp_406)

	var _cxdatum_tmp_408 i32
	_cxdatum_tmp_408 = 0
	stratok = _cxdatum_tmp_408

	var _cxdatum_tmp_409 makeStrat_arg_EgressReturn
	_cxdatum_tmp_409 = makeStrat_arg_EgressReturn{}
	_cxdatum_tmp_409.stratok = stratok
	out = serializemakeStrat_arg_EgressReturn(_cxdatum_tmp_409)
}

func makeRestrat (restrat [32]ui8) (out []ui8) {
	var restratok i32
	var _cxdatum_tmp_410 str
	_cxdatum_tmp_410 = "<|::[]CXSTRATUS_RESTRAT[]::|>"
	var _cxdatum_tmp_411 []ui8
	_cxdatum_tmp_411 = cxdatum.str2bytes(_cxdatum_tmp_410)
	var _cxdatum_tmp_412 [93]ui8
	for _cxdatum_tmp_413 := 0; _cxdatum_tmp_413 < len(_cxdatum_tmp_411); _cxdatum_tmp_413++ {
		_cxdatum_tmp_412[_cxdatum_tmp_413] = _cxdatum_tmp_411[_cxdatum_tmp_413]
	}
	var msgrestrat [93]ui8
	msgrestrat = _cxdatum_tmp_412

	var _cxdatum_tmp_414 []ui8
	for _cxdatum_tmp_415 := 29; _cxdatum_tmp_415 < 93 && _cxdatum_tmp_415 < len(msgrestrat); _cxdatum_tmp_415++ {
		_cxdatum_tmp_414 = append(_cxdatum_tmp_414, msgrestrat[_cxdatum_tmp_415])
	}
	var _cxdatum_tmp_417 str
	_cxdatum_tmp_417 = shaToHex(restrat)
	var _cxdatum_tmp_418 []ui8
	_cxdatum_tmp_418 = cxdatum.str2bytes(_cxdatum_tmp_417)
	_cxdatum_tmp_414 = _cxdatum_tmp_418
	for _cxdatum_tmp_416 := 0; _cxdatum_tmp_416 < 64 && _cxdatum_tmp_416 < len(_cxdatum_tmp_414); _cxdatum_tmp_416++ {
		msgrestrat[_cxdatum_tmp_416 + 29] = _cxdatum_tmp_414[_cxdatum_tmp_416]
	}

	var _cxdatum_tmp_419 []ui8
	for _cxdatum_tmp_420 := 0; _cxdatum_tmp_420 < 93; _cxdatum_tmp_420++ {
		_cxdatum_tmp_419 = append(_cxdatum_tmp_419, msgrestrat[_cxdatum_tmp_420])
	}
	var _cxdatum_tmp_421 bool
	_cxdatum_tmp_421 = cxdatum.transact(_cxdatum_tmp_419)

	var _cxdatum_tmp_422 i32
	_cxdatum_tmp_422 = 0
	restratok = _cxdatum_tmp_422

	var _cxdatum_tmp_423 makeRestrat_arg_EgressReturn
	_cxdatum_tmp_423 = makeRestrat_arg_EgressReturn{}
	_cxdatum_tmp_423.restratok = restratok
	out = serializemakeRestrat_arg_EgressReturn(_cxdatum_tmp_423)
}

func makeFollow (owner str) (out []ui8) {
	var followok i32
	var _cxdatum_tmp_424 []ui8
	_cxdatum_tmp_424 = cxdatum.str2bytes(owner)
	var _cxdatum_tmp_425 []ui8
	_cxdatum_tmp_425 = cxdatum.fetch(dbAccounts, _cxdatum_tmp_424)
	var _cxdatum_tmp_426 Account
	if len(_cxdatum_tmp_425) == 0 {
		_cxdatum_tmp_426 = Account{}
	} else {
		_cxdatum_tmp_426 = deserializeAccount(_cxdatum_tmp_425)
	}
	var _cxdatum_tmp_427 []ui8
	_cxdatum_tmp_427 = _cxdatum_tmp_426.following
	var ntests []ui8
	ntests = _cxdatum_tmp_427


	for _cxdatum_tmp_428 := 0; _cxdatum_tmp_428 < len(ntests) / 25; _cxdatum_tmp_428++ {
		var ntest [25]ui8
		ntest = walSliceIndex(ntests, _cxdatum_tmp_428)
		var _cxdatum_tmp_429 str
		_cxdatum_tmp_429 = cxdatum.rdaddress(ntest)
		var lvarntest str
		lvarntest = _cxdatum_tmp_429

		if owner == lvarntest {
			var _cxdatum_tmp_430 i32
			_cxdatum_tmp_430 = 2
			followok = _cxdatum_tmp_430

			return

		} 

	}


	var _cxdatum_tmp_431 str
	_cxdatum_tmp_431 = "<|::[]CXSTRATUS_FOLLOWF[]::|>"
	var _cxdatum_tmp_432 []ui8
	_cxdatum_tmp_432 = cxdatum.str2bytes(_cxdatum_tmp_431)
	var _cxdatum_tmp_433 [512]ui8
	for _cxdatum_tmp_434 := 0; _cxdatum_tmp_434 < len(_cxdatum_tmp_432); _cxdatum_tmp_434++ {
		_cxdatum_tmp_433[_cxdatum_tmp_434] = _cxdatum_tmp_432[_cxdatum_tmp_434]
	}
	var msgfollow [512]ui8
	msgfollow = _cxdatum_tmp_433

	var _cxdatum_tmp_435 []ui8
	for _cxdatum_tmp_436 := 29; _cxdatum_tmp_436 < 512 && _cxdatum_tmp_436 < len(msgfollow); _cxdatum_tmp_436++ {
		_cxdatum_tmp_435 = append(_cxdatum_tmp_435, msgfollow[_cxdatum_tmp_436])
	}
	var _cxdatum_tmp_438 []ui8
	_cxdatum_tmp_438 = cxdatum.str2bytes(owner)
	_cxdatum_tmp_435 = _cxdatum_tmp_438
	for _cxdatum_tmp_437 := 0; _cxdatum_tmp_437 < 483 && _cxdatum_tmp_437 < len(_cxdatum_tmp_435); _cxdatum_tmp_437++ {
		msgfollow[_cxdatum_tmp_437 + 29] = _cxdatum_tmp_435[_cxdatum_tmp_437]
	}

	var _cxdatum_tmp_439 []ui8
	for _cxdatum_tmp_440 := 0; _cxdatum_tmp_440 < 512; _cxdatum_tmp_440++ {
		_cxdatum_tmp_439 = append(_cxdatum_tmp_439, msgfollow[_cxdatum_tmp_440])
	}
	var _cxdatum_tmp_441 bool
	_cxdatum_tmp_441 = cxdatum.transact(_cxdatum_tmp_439)

	var _cxdatum_tmp_442 i32
	_cxdatum_tmp_442 = 0
	followok = _cxdatum_tmp_442

	var _cxdatum_tmp_443 makeFollow_arg_EgressReturn
	_cxdatum_tmp_443 = makeFollow_arg_EgressReturn{}
	_cxdatum_tmp_443.followok = followok
	out = serializemakeFollow_arg_EgressReturn(_cxdatum_tmp_443)
}

func getWallet (nname str) (out []ui8) {
	var owner [25]ui8
	var _cxdatum_tmp_444 []ui8
	_cxdatum_tmp_444 = cxdatum.str2bytes(nname)
	var _cxdatum_tmp_445 []ui8
	_cxdatum_tmp_445 = cxdatum.fetch(dbTheNames, _cxdatum_tmp_444)
	var _cxdatum_tmp_446 [25]ui8
	var _cxdatum_tmp_447 i32
	_cxdatum_tmp_446 = deserializeWal(_cxdatum_tmp_445, &_cxdatum_tmp_447)
	owner = _cxdatum_tmp_446

	var _cxdatum_tmp_448 getWallet_arg_EgressReturn
	_cxdatum_tmp_448 = getWallet_arg_EgressReturn{}
	_cxdatum_tmp_448.owner = owner
	out = serializegetWallet_arg_EgressReturn(_cxdatum_tmp_448)
}

func getName (owner [25]ui8) (out []ui8) {
	var name str
	var _cxdatum_tmp_449 []ui8
	_cxdatum_tmp_449 = serializeWal(owner)
	var _cxdatum_tmp_450 []ui8
	_cxdatum_tmp_450 = cxdatum.fetch(dbWallets, _cxdatum_tmp_449)
	var _cxdatum_tmp_451 str
	var _cxdatum_tmp_452 i32
	_cxdatum_tmp_451 = deserializeStr(_cxdatum_tmp_450, &_cxdatum_tmp_452)
	name = _cxdatum_tmp_451

	var _cxdatum_tmp_453 getName_arg_EgressReturn
	_cxdatum_tmp_453 = getName_arg_EgressReturn{}
	_cxdatum_tmp_453.name = name
	out = serializegetName_arg_EgressReturn(_cxdatum_tmp_453)
}

func getHashtag (tag str) (out []ui8) {
	var hashtg Hashtag
	var _cxdatum_tmp_454 []ui8
	_cxdatum_tmp_454 = cxdatum.str2bytes(tag)
	var _cxdatum_tmp_455 []ui8
	_cxdatum_tmp_455 = cxdatum.fetch(dbHashtags, _cxdatum_tmp_454)
	var _cxdatum_tmp_456 Hashtag
	if len(_cxdatum_tmp_455) == 0 {
		_cxdatum_tmp_456 = Hashtag{}
	} else {
		_cxdatum_tmp_456 = deserializeHashtag(_cxdatum_tmp_455)
	}
	hashtg = _cxdatum_tmp_456

	var _cxdatum_tmp_457 getHashtag_arg_EgressReturn
	_cxdatum_tmp_457 = getHashtag_arg_EgressReturn{}
	_cxdatum_tmp_457.hashtg = hashtg
	out = serializegetHashtag_arg_EgressReturn(_cxdatum_tmp_457)
}

func makeBio (bio str) (out []ui8) {
	var biook i32
	var _cxdatum_tmp_458 str
	_cxdatum_tmp_458 = "<|::[]CXSTRATUS_BIOBIOB[]::|>"
	var _cxdatum_tmp_459 []ui8
	_cxdatum_tmp_459 = cxdatum.str2bytes(_cxdatum_tmp_458)
	var _cxdatum_tmp_460 [512]ui8
	for _cxdatum_tmp_461 := 0; _cxdatum_tmp_461 < len(_cxdatum_tmp_459); _cxdatum_tmp_461++ {
		_cxdatum_tmp_460[_cxdatum_tmp_461] = _cxdatum_tmp_459[_cxdatum_tmp_461]
	}
	var msgbio [512]ui8
	msgbio = _cxdatum_tmp_460

	var _cxdatum_tmp_462 []ui8
	for _cxdatum_tmp_463 := 29; _cxdatum_tmp_463 < 512 && _cxdatum_tmp_463 < len(msgbio); _cxdatum_tmp_463++ {
		_cxdatum_tmp_462 = append(_cxdatum_tmp_462, msgbio[_cxdatum_tmp_463])
	}
	var _cxdatum_tmp_465 []ui8
	_cxdatum_tmp_465 = cxdatum.str2bytes(bio)
	_cxdatum_tmp_462 = _cxdatum_tmp_465
	for _cxdatum_tmp_464 := 0; _cxdatum_tmp_464 < 483 && _cxdatum_tmp_464 < len(_cxdatum_tmp_462); _cxdatum_tmp_464++ {
		msgbio[_cxdatum_tmp_464 + 29] = _cxdatum_tmp_462[_cxdatum_tmp_464]
	}

	var _cxdatum_tmp_466 []ui8
	for _cxdatum_tmp_467 := 0; _cxdatum_tmp_467 < 512; _cxdatum_tmp_467++ {
		_cxdatum_tmp_466 = append(_cxdatum_tmp_466, msgbio[_cxdatum_tmp_467])
	}
	var _cxdatum_tmp_468 bool
	_cxdatum_tmp_468 = cxdatum.transact(_cxdatum_tmp_466)

	var _cxdatum_tmp_469 i32
	_cxdatum_tmp_469 = 0
	biook = _cxdatum_tmp_469

	var _cxdatum_tmp_470 makeBio_arg_EgressReturn
	_cxdatum_tmp_470 = makeBio_arg_EgressReturn{}
	_cxdatum_tmp_470.biook = biook
	out = serializemakeBio_arg_EgressReturn(_cxdatum_tmp_470)
}

func makePfp (pfp str) (out []ui8) {
	var pfpok i32
	var _cxdatum_tmp_471 str
	_cxdatum_tmp_471 = "<|::[]CXSTRATUS_PFPPFPP[]::|>"
	var _cxdatum_tmp_472 []ui8
	_cxdatum_tmp_472 = cxdatum.str2bytes(_cxdatum_tmp_471)
	var _cxdatum_tmp_473 [512]ui8
	for _cxdatum_tmp_474 := 0; _cxdatum_tmp_474 < len(_cxdatum_tmp_472); _cxdatum_tmp_474++ {
		_cxdatum_tmp_473[_cxdatum_tmp_474] = _cxdatum_tmp_472[_cxdatum_tmp_474]
	}
	var msgpfp [512]ui8
	msgpfp = _cxdatum_tmp_473

	var _cxdatum_tmp_475 []ui8
	for _cxdatum_tmp_476 := 29; _cxdatum_tmp_476 < 512 && _cxdatum_tmp_476 < len(msgpfp); _cxdatum_tmp_476++ {
		_cxdatum_tmp_475 = append(_cxdatum_tmp_475, msgpfp[_cxdatum_tmp_476])
	}
	var _cxdatum_tmp_478 []ui8
	_cxdatum_tmp_478 = cxdatum.str2bytes(pfp)
	_cxdatum_tmp_475 = _cxdatum_tmp_478
	for _cxdatum_tmp_477 := 0; _cxdatum_tmp_477 < 483 && _cxdatum_tmp_477 < len(_cxdatum_tmp_475); _cxdatum_tmp_477++ {
		msgpfp[_cxdatum_tmp_477 + 29] = _cxdatum_tmp_475[_cxdatum_tmp_477]
	}

	var _cxdatum_tmp_479 []ui8
	for _cxdatum_tmp_480 := 0; _cxdatum_tmp_480 < 512; _cxdatum_tmp_480++ {
		_cxdatum_tmp_479 = append(_cxdatum_tmp_479, msgpfp[_cxdatum_tmp_480])
	}
	var _cxdatum_tmp_481 bool
	_cxdatum_tmp_481 = cxdatum.transact(_cxdatum_tmp_479)

	var _cxdatum_tmp_482 i32
	_cxdatum_tmp_482 = 0
	pfpok = _cxdatum_tmp_482

	var _cxdatum_tmp_483 makePfp_arg_EgressReturn
	_cxdatum_tmp_483 = makePfp_arg_EgressReturn{}
	_cxdatum_tmp_483.pfpok = pfpok
	out = serializemakePfp_arg_EgressReturn(_cxdatum_tmp_483)
}

func makeReply (reply [32]ui8, strat str) (out []ui8) {
	var replyok i32
	var _cxdatum_tmp_484 str
	_cxdatum_tmp_484 = "<|::[]CXSTRATUS_REPLYRE[]::|>"
	var _cxdatum_tmp_485 []ui8
	_cxdatum_tmp_485 = cxdatum.str2bytes(_cxdatum_tmp_484)
	var _cxdatum_tmp_486 [512]ui8
	for _cxdatum_tmp_487 := 0; _cxdatum_tmp_487 < len(_cxdatum_tmp_485); _cxdatum_tmp_487++ {
		_cxdatum_tmp_486[_cxdatum_tmp_487] = _cxdatum_tmp_485[_cxdatum_tmp_487]
	}
	var msgreply [512]ui8
	msgreply = _cxdatum_tmp_486

	var _cxdatum_tmp_488 []ui8
	for _cxdatum_tmp_489 := 29; _cxdatum_tmp_489 < 93 && _cxdatum_tmp_489 < len(msgreply); _cxdatum_tmp_489++ {
		_cxdatum_tmp_488 = append(_cxdatum_tmp_488, msgreply[_cxdatum_tmp_489])
	}
	var _cxdatum_tmp_491 str
	_cxdatum_tmp_491 = shaToHex(reply)
	var _cxdatum_tmp_492 []ui8
	_cxdatum_tmp_492 = cxdatum.str2bytes(_cxdatum_tmp_491)
	_cxdatum_tmp_488 = _cxdatum_tmp_492
	for _cxdatum_tmp_490 := 0; _cxdatum_tmp_490 < 64 && _cxdatum_tmp_490 < len(_cxdatum_tmp_488); _cxdatum_tmp_490++ {
		msgreply[_cxdatum_tmp_490 + 29] = _cxdatum_tmp_488[_cxdatum_tmp_490]
	}

	var _cxdatum_tmp_493 []ui8
	for _cxdatum_tmp_494 := 93; _cxdatum_tmp_494 < 512 && _cxdatum_tmp_494 < len(msgreply); _cxdatum_tmp_494++ {
		_cxdatum_tmp_493 = append(_cxdatum_tmp_493, msgreply[_cxdatum_tmp_494])
	}
	var _cxdatum_tmp_496 []ui8
	_cxdatum_tmp_496 = cxdatum.str2bytes(strat)
	_cxdatum_tmp_493 = _cxdatum_tmp_496
	for _cxdatum_tmp_495 := 0; _cxdatum_tmp_495 < 419 && _cxdatum_tmp_495 < len(_cxdatum_tmp_493); _cxdatum_tmp_495++ {
		msgreply[_cxdatum_tmp_495 + 93] = _cxdatum_tmp_493[_cxdatum_tmp_495]
	}

	var _cxdatum_tmp_497 []ui8
	for _cxdatum_tmp_498 := 0; _cxdatum_tmp_498 < 512; _cxdatum_tmp_498++ {
		_cxdatum_tmp_497 = append(_cxdatum_tmp_497, msgreply[_cxdatum_tmp_498])
	}
	var _cxdatum_tmp_499 bool
	_cxdatum_tmp_499 = cxdatum.transact(_cxdatum_tmp_497)

	var _cxdatum_tmp_500 i32
	_cxdatum_tmp_500 = 0
	replyok = _cxdatum_tmp_500

	var _cxdatum_tmp_501 makeReply_arg_EgressReturn
	_cxdatum_tmp_501 = makeReply_arg_EgressReturn{}
	_cxdatum_tmp_501.replyok = replyok
	out = serializemakeReply_arg_EgressReturn(_cxdatum_tmp_501)
}

func getReplies (txid [32]ui8) (out []ui8) {
	var replies []ui8
	var _cxdatum_tmp_502 []ui8
	_cxdatum_tmp_502 = serializeSha(txid)
	var _cxdatum_tmp_503 []ui8
	_cxdatum_tmp_503 = cxdatum.fetch(dbReplies, _cxdatum_tmp_502)
	var _cxdatum_tmp_504 []ui8
	var _cxdatum_tmp_505 i32
	_cxdatum_tmp_504 = deserializeShaSlice(_cxdatum_tmp_503, &_cxdatum_tmp_505)
	replies = _cxdatum_tmp_504

	var _cxdatum_tmp_506 getReplies_arg_EgressReturn
	_cxdatum_tmp_506 = getReplies_arg_EgressReturn{}
	_cxdatum_tmp_506.replies = replies
	out = serializegetReplies_arg_EgressReturn(_cxdatum_tmp_506)
}

func getLikedBy (txid [32]ui8) (out []ui8) {
	var likedby []ui8
	var _cxdatum_tmp_507 []ui8
	_cxdatum_tmp_507 = serializeSha(txid)
	var _cxdatum_tmp_508 []ui8
	_cxdatum_tmp_508 = cxdatum.fetch(dbLikes, _cxdatum_tmp_507)
	var _cxdatum_tmp_509 []ui8
	var _cxdatum_tmp_510 i32
	_cxdatum_tmp_509 = deserializeWalSlice(_cxdatum_tmp_508, &_cxdatum_tmp_510)
	likedby = _cxdatum_tmp_509

	var _cxdatum_tmp_511 getLikedBy_arg_EgressReturn
	_cxdatum_tmp_511 = getLikedBy_arg_EgressReturn{}
	_cxdatum_tmp_511.likedby = likedby
	out = serializegetLikedBy_arg_EgressReturn(_cxdatum_tmp_511)
}

func getAllStrats () (out []ui8) {
	var allstrats []ui8
	var _cxdatum_tmp_512 str
	_cxdatum_tmp_512 = "all"
	var _cxdatum_tmp_513 []ui8
	_cxdatum_tmp_513 = cxdatum.str2bytes(_cxdatum_tmp_512)
	var _cxdatum_tmp_514 []ui8
	_cxdatum_tmp_514 = cxdatum.fetch(dbAllStrats, _cxdatum_tmp_513)
	var _cxdatum_tmp_515 []ui8
	var _cxdatum_tmp_516 i32
	_cxdatum_tmp_515 = deserializeShaSlice(_cxdatum_tmp_514, &_cxdatum_tmp_516)
	allstrats = _cxdatum_tmp_515

	var _cxdatum_tmp_517 getAllStrats_arg_EgressReturn
	_cxdatum_tmp_517 = getAllStrats_arg_EgressReturn{}
	_cxdatum_tmp_517.allstrats = allstrats
	out = serializegetAllStrats_arg_EgressReturn(_cxdatum_tmp_517)
}

func makeName (name str) (out []ui8) {
	var nameok i32
	var _cxdatum_tmp_518 str
	_cxdatum_tmp_518 = "<|::[]CXSTRATUS_NAMENAM[]::|>"
	var _cxdatum_tmp_519 []ui8
	_cxdatum_tmp_519 = cxdatum.str2bytes(_cxdatum_tmp_518)
	var _cxdatum_tmp_520 [61]ui8
	for _cxdatum_tmp_521 := 0; _cxdatum_tmp_521 < len(_cxdatum_tmp_519); _cxdatum_tmp_521++ {
		_cxdatum_tmp_520[_cxdatum_tmp_521] = _cxdatum_tmp_519[_cxdatum_tmp_521]
	}
	var msgname [61]ui8
	msgname = _cxdatum_tmp_520

	var _cxdatum_tmp_522 []ui8
	for _cxdatum_tmp_523 := 29; _cxdatum_tmp_523 < 61 && _cxdatum_tmp_523 < len(msgname); _cxdatum_tmp_523++ {
		_cxdatum_tmp_522 = append(_cxdatum_tmp_522, msgname[_cxdatum_tmp_523])
	}
	var _cxdatum_tmp_525 []ui8
	_cxdatum_tmp_525 = cxdatum.str2bytes(name)
	_cxdatum_tmp_522 = _cxdatum_tmp_525
	for _cxdatum_tmp_524 := 0; _cxdatum_tmp_524 < 32 && _cxdatum_tmp_524 < len(_cxdatum_tmp_522); _cxdatum_tmp_524++ {
		msgname[_cxdatum_tmp_524 + 29] = _cxdatum_tmp_522[_cxdatum_tmp_524]
	}

	var _cxdatum_tmp_526 []ui8
	for _cxdatum_tmp_527 := 0; _cxdatum_tmp_527 < 61; _cxdatum_tmp_527++ {
		_cxdatum_tmp_526 = append(_cxdatum_tmp_526, msgname[_cxdatum_tmp_527])
	}
	var _cxdatum_tmp_528 bool
	_cxdatum_tmp_528 = cxdatum.transact(_cxdatum_tmp_526)

	var _cxdatum_tmp_529 i32
	_cxdatum_tmp_529 = 0
	nameok = _cxdatum_tmp_529

	var _cxdatum_tmp_530 makeName_arg_EgressReturn
	_cxdatum_tmp_530 = makeName_arg_EgressReturn{}
	_cxdatum_tmp_530.nameok = nameok
	out = serializemakeName_arg_EgressReturn(_cxdatum_tmp_530)
}

func getRestratBy (txid [32]ui8) (out []ui8) {
	var restratby []ui8
	var _cxdatum_tmp_531 []ui8
	_cxdatum_tmp_531 = serializeSha(txid)
	var _cxdatum_tmp_532 []ui8
	_cxdatum_tmp_532 = cxdatum.fetch(dbRestrats, _cxdatum_tmp_531)
	var _cxdatum_tmp_533 []ui8
	var _cxdatum_tmp_534 i32
	_cxdatum_tmp_533 = deserializeWalSlice(_cxdatum_tmp_532, &_cxdatum_tmp_534)
	restratby = _cxdatum_tmp_533

	var _cxdatum_tmp_535 getRestratBy_arg_EgressReturn
	_cxdatum_tmp_535 = getRestratBy_arg_EgressReturn{}
	_cxdatum_tmp_535.restratby = restratby
	out = serializegetRestratBy_arg_EgressReturn(_cxdatum_tmp_535)
}


