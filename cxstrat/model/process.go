//code generated by CXDatum. DO NOT EDIT.


package model

import (
	"github.com/SkycoinProject/skycoin/src/cipher"
)

var donereq chan bool
var doneres chan bool
var req chan []byte
var res chan []byte

func init() {
	donereq = make(chan bool)
	doneres = make(chan bool)
	req = make(chan []byte, 1)
	res = make(chan []byte, 1)
}

func waitForPrgmReturn() []byte {
	<-doneres
	return <-res
}

func passToPrgm(byts []byte) {
	req <- byts
	donereq <- true
}

const CXDATUM_EGRESS_CODE_getStrat = 0
const CXDATUM_EGRESS_CODE_getAccount = 1
const CXDATUM_EGRESS_CODE_makeStrat = 2
const CXDATUM_EGRESS_CODE_makeRestrat = 3
const CXDATUM_EGRESS_CODE_makeFollow = 4
const CXDATUM_EGRESS_CODE_getWallet = 5
const CXDATUM_EGRESS_CODE_getName = 6
const CXDATUM_EGRESS_CODE_getHashtag = 7
const CXDATUM_EGRESS_CODE_makeBio = 8
const CXDATUM_EGRESS_CODE_makePfp = 9
const CXDATUM_EGRESS_CODE_makeReply = 10
const CXDATUM_EGRESS_CODE_getReplies = 11
const CXDATUM_EGRESS_CODE_getLikedBy = 12
const CXDATUM_EGRESS_CODE_getAllStrats = 13
const CXDATUM_EGRESS_CODE_makeName = 14
const CXDATUM_EGRESS_CODE_getRestratBy = 15
const CXDATUM_EGRESS_CODE_makeLike = 16
func getStrat (txid cipher.SHA256) (strato Strat) {
	_cxdatum_tmp_703 := getStrat_arg_EgressExpect{}
	_cxdatum_tmp_703.txid = txid
	_cxdatum_tmp_704 := []byte{CXDATUM_EGRESS_CODE_getStrat}
	_cxdatum_tmp_704 = append(_cxdatum_tmp_704, serializegetStrat_arg_EgressExpect(_cxdatum_tmp_703)...)
	passToPrgm(_cxdatum_tmp_704)
	_cxdatum_tmp_704 = waitForPrgmReturn()
	_cxdatum_tmp_705 := deserializegetStrat_arg_EgressReturn(_cxdatum_tmp_704)
	strato = _cxdatum_tmp_705.strato
	return
}

func getAccount (owner cipher.Address) (accnt Account) {
	_cxdatum_tmp_708 := getAccount_arg_EgressExpect{}
	_cxdatum_tmp_708.owner = owner
	_cxdatum_tmp_709 := []byte{CXDATUM_EGRESS_CODE_getAccount}
	_cxdatum_tmp_709 = append(_cxdatum_tmp_709, serializegetAccount_arg_EgressExpect(_cxdatum_tmp_708)...)
	passToPrgm(_cxdatum_tmp_709)
	_cxdatum_tmp_709 = waitForPrgmReturn()
	_cxdatum_tmp_710 := deserializegetAccount_arg_EgressReturn(_cxdatum_tmp_709)
	accnt = _cxdatum_tmp_710.accnt
	return
}

func makeStrat (strat string) (stratok int) {
	_cxdatum_tmp_713 := makeStrat_arg_EgressExpect{}
	_cxdatum_tmp_713.strat = strat
	_cxdatum_tmp_714 := []byte{CXDATUM_EGRESS_CODE_makeStrat}
	_cxdatum_tmp_714 = append(_cxdatum_tmp_714, serializemakeStrat_arg_EgressExpect(_cxdatum_tmp_713)...)
	passToPrgm(_cxdatum_tmp_714)
	_cxdatum_tmp_714 = waitForPrgmReturn()
	_cxdatum_tmp_715 := deserializemakeStrat_arg_EgressReturn(_cxdatum_tmp_714)
	stratok = _cxdatum_tmp_715.stratok
	return
}

func makeRestrat (restrat cipher.SHA256) (restratok int) {
	_cxdatum_tmp_718 := makeRestrat_arg_EgressExpect{}
	_cxdatum_tmp_718.restrat = restrat
	_cxdatum_tmp_719 := []byte{CXDATUM_EGRESS_CODE_makeRestrat}
	_cxdatum_tmp_719 = append(_cxdatum_tmp_719, serializemakeRestrat_arg_EgressExpect(_cxdatum_tmp_718)...)
	passToPrgm(_cxdatum_tmp_719)
	_cxdatum_tmp_719 = waitForPrgmReturn()
	_cxdatum_tmp_720 := deserializemakeRestrat_arg_EgressReturn(_cxdatum_tmp_719)
	restratok = _cxdatum_tmp_720.restratok
	return
}

func makeFollow (owner string) (followok int) {
	_cxdatum_tmp_723 := makeFollow_arg_EgressExpect{}
	_cxdatum_tmp_723.owner = owner
	_cxdatum_tmp_724 := []byte{CXDATUM_EGRESS_CODE_makeFollow}
	_cxdatum_tmp_724 = append(_cxdatum_tmp_724, serializemakeFollow_arg_EgressExpect(_cxdatum_tmp_723)...)
	passToPrgm(_cxdatum_tmp_724)
	_cxdatum_tmp_724 = waitForPrgmReturn()
	_cxdatum_tmp_725 := deserializemakeFollow_arg_EgressReturn(_cxdatum_tmp_724)
	followok = _cxdatum_tmp_725.followok
	return
}

func getWallet (nname string) (owner cipher.Address) {
	_cxdatum_tmp_728 := getWallet_arg_EgressExpect{}
	_cxdatum_tmp_728.nname = nname
	_cxdatum_tmp_729 := []byte{CXDATUM_EGRESS_CODE_getWallet}
	_cxdatum_tmp_729 = append(_cxdatum_tmp_729, serializegetWallet_arg_EgressExpect(_cxdatum_tmp_728)...)
	passToPrgm(_cxdatum_tmp_729)
	_cxdatum_tmp_729 = waitForPrgmReturn()
	_cxdatum_tmp_730 := deserializegetWallet_arg_EgressReturn(_cxdatum_tmp_729)
	owner = _cxdatum_tmp_730.owner
	return
}

func getName (owner cipher.Address) (name string) {
	_cxdatum_tmp_733 := getName_arg_EgressExpect{}
	_cxdatum_tmp_733.owner = owner
	_cxdatum_tmp_734 := []byte{CXDATUM_EGRESS_CODE_getName}
	_cxdatum_tmp_734 = append(_cxdatum_tmp_734, serializegetName_arg_EgressExpect(_cxdatum_tmp_733)...)
	passToPrgm(_cxdatum_tmp_734)
	_cxdatum_tmp_734 = waitForPrgmReturn()
	_cxdatum_tmp_735 := deserializegetName_arg_EgressReturn(_cxdatum_tmp_734)
	name = _cxdatum_tmp_735.name
	return
}

func getHashtag (tag string) (hashtg Hashtag) {
	_cxdatum_tmp_738 := getHashtag_arg_EgressExpect{}
	_cxdatum_tmp_738.tag = tag
	_cxdatum_tmp_739 := []byte{CXDATUM_EGRESS_CODE_getHashtag}
	_cxdatum_tmp_739 = append(_cxdatum_tmp_739, serializegetHashtag_arg_EgressExpect(_cxdatum_tmp_738)...)
	passToPrgm(_cxdatum_tmp_739)
	_cxdatum_tmp_739 = waitForPrgmReturn()
	_cxdatum_tmp_740 := deserializegetHashtag_arg_EgressReturn(_cxdatum_tmp_739)
	hashtg = _cxdatum_tmp_740.hashtg
	return
}

func makeBio (bio string) (biook int) {
	_cxdatum_tmp_743 := makeBio_arg_EgressExpect{}
	_cxdatum_tmp_743.bio = bio
	_cxdatum_tmp_744 := []byte{CXDATUM_EGRESS_CODE_makeBio}
	_cxdatum_tmp_744 = append(_cxdatum_tmp_744, serializemakeBio_arg_EgressExpect(_cxdatum_tmp_743)...)
	passToPrgm(_cxdatum_tmp_744)
	_cxdatum_tmp_744 = waitForPrgmReturn()
	_cxdatum_tmp_745 := deserializemakeBio_arg_EgressReturn(_cxdatum_tmp_744)
	biook = _cxdatum_tmp_745.biook
	return
}

func makePfp (pfp string) (pfpok int) {
	_cxdatum_tmp_748 := makePfp_arg_EgressExpect{}
	_cxdatum_tmp_748.pfp = pfp
	_cxdatum_tmp_749 := []byte{CXDATUM_EGRESS_CODE_makePfp}
	_cxdatum_tmp_749 = append(_cxdatum_tmp_749, serializemakePfp_arg_EgressExpect(_cxdatum_tmp_748)...)
	passToPrgm(_cxdatum_tmp_749)
	_cxdatum_tmp_749 = waitForPrgmReturn()
	_cxdatum_tmp_750 := deserializemakePfp_arg_EgressReturn(_cxdatum_tmp_749)
	pfpok = _cxdatum_tmp_750.pfpok
	return
}

func makeReply (reply cipher.SHA256, strat string) (replyok int) {
	_cxdatum_tmp_754 := makeReply_arg_EgressExpect{}
	_cxdatum_tmp_754.reply = reply
	_cxdatum_tmp_754.strat = strat
	_cxdatum_tmp_755 := []byte{CXDATUM_EGRESS_CODE_makeReply}
	_cxdatum_tmp_755 = append(_cxdatum_tmp_755, serializemakeReply_arg_EgressExpect(_cxdatum_tmp_754)...)
	passToPrgm(_cxdatum_tmp_755)
	_cxdatum_tmp_755 = waitForPrgmReturn()
	_cxdatum_tmp_756 := deserializemakeReply_arg_EgressReturn(_cxdatum_tmp_755)
	replyok = _cxdatum_tmp_756.replyok
	return
}

func getReplies (txid cipher.SHA256) (replies []cipher.SHA256) {
	_cxdatum_tmp_759 := getReplies_arg_EgressExpect{}
	_cxdatum_tmp_759.txid = txid
	_cxdatum_tmp_760 := []byte{CXDATUM_EGRESS_CODE_getReplies}
	_cxdatum_tmp_760 = append(_cxdatum_tmp_760, serializegetReplies_arg_EgressExpect(_cxdatum_tmp_759)...)
	passToPrgm(_cxdatum_tmp_760)
	_cxdatum_tmp_760 = waitForPrgmReturn()
	_cxdatum_tmp_761 := deserializegetReplies_arg_EgressReturn(_cxdatum_tmp_760)
	replies = _cxdatum_tmp_761.replies
	return
}

func getLikedBy (txid cipher.SHA256) (likedby []cipher.Address) {
	_cxdatum_tmp_764 := getLikedBy_arg_EgressExpect{}
	_cxdatum_tmp_764.txid = txid
	_cxdatum_tmp_765 := []byte{CXDATUM_EGRESS_CODE_getLikedBy}
	_cxdatum_tmp_765 = append(_cxdatum_tmp_765, serializegetLikedBy_arg_EgressExpect(_cxdatum_tmp_764)...)
	passToPrgm(_cxdatum_tmp_765)
	_cxdatum_tmp_765 = waitForPrgmReturn()
	_cxdatum_tmp_766 := deserializegetLikedBy_arg_EgressReturn(_cxdatum_tmp_765)
	likedby = _cxdatum_tmp_766.likedby
	return
}

func getAllStrats () (allstrats []cipher.SHA256) {
	_cxdatum_tmp_768 := getAllStrats_arg_EgressExpect{}
	_cxdatum_tmp_769 := []byte{CXDATUM_EGRESS_CODE_getAllStrats}
	_cxdatum_tmp_769 = append(_cxdatum_tmp_769, serializegetAllStrats_arg_EgressExpect(_cxdatum_tmp_768)...)
	passToPrgm(_cxdatum_tmp_769)
	_cxdatum_tmp_769 = waitForPrgmReturn()
	_cxdatum_tmp_770 := deserializegetAllStrats_arg_EgressReturn(_cxdatum_tmp_769)
	allstrats = _cxdatum_tmp_770.allstrats
	return
}

func makeName (name string) (nameok int) {
	_cxdatum_tmp_773 := makeName_arg_EgressExpect{}
	_cxdatum_tmp_773.name = name
	_cxdatum_tmp_774 := []byte{CXDATUM_EGRESS_CODE_makeName}
	_cxdatum_tmp_774 = append(_cxdatum_tmp_774, serializemakeName_arg_EgressExpect(_cxdatum_tmp_773)...)
	passToPrgm(_cxdatum_tmp_774)
	_cxdatum_tmp_774 = waitForPrgmReturn()
	_cxdatum_tmp_775 := deserializemakeName_arg_EgressReturn(_cxdatum_tmp_774)
	nameok = _cxdatum_tmp_775.nameok
	return
}

func getRestratBy (txid cipher.SHA256) (restratby []cipher.Address) {
	_cxdatum_tmp_778 := getRestratBy_arg_EgressExpect{}
	_cxdatum_tmp_778.txid = txid
	_cxdatum_tmp_779 := []byte{CXDATUM_EGRESS_CODE_getRestratBy}
	_cxdatum_tmp_779 = append(_cxdatum_tmp_779, serializegetRestratBy_arg_EgressExpect(_cxdatum_tmp_778)...)
	passToPrgm(_cxdatum_tmp_779)
	_cxdatum_tmp_779 = waitForPrgmReturn()
	_cxdatum_tmp_780 := deserializegetRestratBy_arg_EgressReturn(_cxdatum_tmp_779)
	restratby = _cxdatum_tmp_780.restratby
	return
}

func makeLike (like cipher.SHA256) (likeok int) {
	_cxdatum_tmp_783 := makeLike_arg_EgressExpect{}
	_cxdatum_tmp_783.like = like
	_cxdatum_tmp_784 := []byte{CXDATUM_EGRESS_CODE_makeLike}
	_cxdatum_tmp_784 = append(_cxdatum_tmp_784, serializemakeLike_arg_EgressExpect(_cxdatum_tmp_783)...)
	passToPrgm(_cxdatum_tmp_784)
	_cxdatum_tmp_784 = waitForPrgmReturn()
	_cxdatum_tmp_785 := deserializemakeLike_arg_EgressReturn(_cxdatum_tmp_784)
	likeok = _cxdatum_tmp_785.likeok
	return
}


