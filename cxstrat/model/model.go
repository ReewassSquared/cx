//code generated by CXDatum. DO NOT EDIT.


package model

import (
    "github.com/SkycoinProject/skycoin/src/cipher"
)

func makeInt(b []byte) int {
	return (int(b[0]) << 24) | (int(b[1]) << 16) | (int(b[2]) << 8) | int(b[3])
}

func breakInt(i int) []byte {
	b := make([]byte, 4)
	b[0] = byte((i & 0xFF000000) >> 24)
	b[1] = byte((i & 0xFF0000) >> 16)
	b[2] = byte((i & 0xFF00) >> 8)
	b[3] = byte(i & 0xFF)
	return b
}
type Hashtag struct {
	name string
	tlikes int
	trestrats int
	strats []cipher.SHA256
}

type Strat struct {
	owner cipher.Address
	obj cipher.SHA256
	txt string
	pname string
	likes int
	restrats int
	tags []cipher.Address
	hashs []string
	hashidx []int
	rplto cipher.SHA256
	follow cipher.Address
}

type Account struct {
	name string
	cname string
	id cipher.Address
	bio string
	pfp string
	strats []cipher.SHA256
	likes []cipher.SHA256
	restrats []cipher.SHA256
	tags []cipher.SHA256
	followers []cipher.Address
	following []cipher.Address
	followcnt int
	fllwngcnt int
}

type getRestratBy_arg_EgressExpect struct {
	txid cipher.SHA256
}

type getRestratBy_arg_EgressReturn struct {
	restratby []cipher.Address
}

type getAllStrats_arg_EgressExpect struct {
}

type getAllStrats_arg_EgressReturn struct {
	allstrats []cipher.SHA256
}

type makeName_arg_EgressExpect struct {
	name string
}

type makeName_arg_EgressReturn struct {
	nameok int
}

type makeLike_arg_EgressExpect struct {
	like cipher.SHA256
}

type makeLike_arg_EgressReturn struct {
	likeok int
}

type makeStrat_arg_EgressExpect struct {
	strat string
}

type makeStrat_arg_EgressReturn struct {
	stratok int
}

type makeRestrat_arg_EgressExpect struct {
	restrat cipher.SHA256
}

type makeRestrat_arg_EgressReturn struct {
	restratok int
}

type makeFollow_arg_EgressExpect struct {
	owner string
}

type makeFollow_arg_EgressReturn struct {
	followok int
}

type getWallet_arg_EgressExpect struct {
	nname string
}

type getWallet_arg_EgressReturn struct {
	owner cipher.Address
}

type getStrat_arg_EgressExpect struct {
	txid cipher.SHA256
}

type getStrat_arg_EgressReturn struct {
	strato Strat
}

type getAccount_arg_EgressExpect struct {
	owner cipher.Address
}

type getAccount_arg_EgressReturn struct {
	accnt Account
}

type makePfp_arg_EgressExpect struct {
	pfp string
}

type makePfp_arg_EgressReturn struct {
	pfpok int
}

type makeReply_arg_EgressExpect struct {
	reply cipher.SHA256
	strat string
}

type makeReply_arg_EgressReturn struct {
	replyok int
}

type getReplies_arg_EgressExpect struct {
	txid cipher.SHA256
}

type getReplies_arg_EgressReturn struct {
	replies []cipher.SHA256
}

type getLikedBy_arg_EgressExpect struct {
	txid cipher.SHA256
}

type getLikedBy_arg_EgressReturn struct {
	likedby []cipher.Address
}

type getName_arg_EgressExpect struct {
	owner cipher.Address
}

type getName_arg_EgressReturn struct {
	name string
}

type getHashtag_arg_EgressExpect struct {
	tag string
}

type getHashtag_arg_EgressReturn struct {
	hashtg Hashtag
}

type makeBio_arg_EgressExpect struct {
	bio string
}

type makeBio_arg_EgressReturn struct {
	biook int
}



func serializeHashtag (obj Hashtag) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.name)), []byte(obj.name)...)...)
	out = append(out, breakInt(obj.tlikes)...)
	out = append(out, breakInt(obj.trestrats)...)
	out = append(out, breakInt(len(obj.strats))...)
	for i := 0; i < len(obj.strats); i++ {
		out = append(out, obj.strats[i][:]...)
	}
	return out
}

func serializeStrat (obj Strat) []byte {
	var out []byte
	out = append(out, obj.owner.Bytes()...)
	out = append(out, obj.obj[:]...)
	out = append(out, append(breakInt(len(obj.txt)), []byte(obj.txt)...)...)
	out = append(out, append(breakInt(len(obj.pname)), []byte(obj.pname)...)...)
	out = append(out, breakInt(obj.likes)...)
	out = append(out, breakInt(obj.restrats)...)
	out = append(out, breakInt(len(obj.tags))...)
	for i := 0; i < len(obj.tags); i++ {
		out = append(out, obj.tags[i].Bytes()...)
	}
	out = append(out, breakInt(len(obj.hashs))...)
	for i := 0; i < len(obj.hashs); i++ {
		out = append(out, append(breakInt(len(obj.hashs[i])), []byte(obj.hashs[i])...)...)
	}
	out = append(out, breakInt(len(obj.hashidx))...)
	for i := 0; i < len(obj.hashidx); i++ {
		out = append(out, breakInt(obj.hashidx[i])...)
	}
	out = append(out, obj.rplto[:]...)
	out = append(out, obj.follow.Bytes()...)
	return out
}

func serializeAccount (obj Account) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.name)), []byte(obj.name)...)...)
	out = append(out, append(breakInt(len(obj.cname)), []byte(obj.cname)...)...)
	out = append(out, obj.id.Bytes()...)
	out = append(out, append(breakInt(len(obj.bio)), []byte(obj.bio)...)...)
	out = append(out, append(breakInt(len(obj.pfp)), []byte(obj.pfp)...)...)
	out = append(out, breakInt(len(obj.strats))...)
	for i := 0; i < len(obj.strats); i++ {
		out = append(out, obj.strats[i][:]...)
	}
	out = append(out, breakInt(len(obj.likes))...)
	for i := 0; i < len(obj.likes); i++ {
		out = append(out, obj.likes[i][:]...)
	}
	out = append(out, breakInt(len(obj.restrats))...)
	for i := 0; i < len(obj.restrats); i++ {
		out = append(out, obj.restrats[i][:]...)
	}
	out = append(out, breakInt(len(obj.tags))...)
	for i := 0; i < len(obj.tags); i++ {
		out = append(out, obj.tags[i][:]...)
	}
	out = append(out, breakInt(len(obj.followers))...)
	for i := 0; i < len(obj.followers); i++ {
		out = append(out, obj.followers[i].Bytes()...)
	}
	out = append(out, breakInt(len(obj.following))...)
	for i := 0; i < len(obj.following); i++ {
		out = append(out, obj.following[i].Bytes()...)
	}
	out = append(out, breakInt(obj.followcnt)...)
	out = append(out, breakInt(obj.fllwngcnt)...)
	return out
}

func serializegetRestratBy_arg_EgressExpect (obj getRestratBy_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.txid[:]...)
	return out
}

func serializegetRestratBy_arg_EgressReturn (obj getRestratBy_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(len(obj.restratby))...)
	for i := 0; i < len(obj.restratby); i++ {
		out = append(out, obj.restratby[i].Bytes()...)
	}
	return out
}

func serializegetAllStrats_arg_EgressExpect (obj getAllStrats_arg_EgressExpect) []byte {
	var out []byte
	return out
}

func serializegetAllStrats_arg_EgressReturn (obj getAllStrats_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(len(obj.allstrats))...)
	for i := 0; i < len(obj.allstrats); i++ {
		out = append(out, obj.allstrats[i][:]...)
	}
	return out
}

func serializemakeName_arg_EgressExpect (obj makeName_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.name)), []byte(obj.name)...)...)
	return out
}

func serializemakeName_arg_EgressReturn (obj makeName_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.nameok)...)
	return out
}

func serializemakeLike_arg_EgressExpect (obj makeLike_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.like[:]...)
	return out
}

func serializemakeLike_arg_EgressReturn (obj makeLike_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.likeok)...)
	return out
}

func serializemakeStrat_arg_EgressExpect (obj makeStrat_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.strat)), []byte(obj.strat)...)...)
	return out
}

func serializemakeStrat_arg_EgressReturn (obj makeStrat_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.stratok)...)
	return out
}

func serializemakeRestrat_arg_EgressExpect (obj makeRestrat_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.restrat[:]...)
	return out
}

func serializemakeRestrat_arg_EgressReturn (obj makeRestrat_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.restratok)...)
	return out
}

func serializemakeFollow_arg_EgressExpect (obj makeFollow_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.owner)), []byte(obj.owner)...)...)
	return out
}

func serializemakeFollow_arg_EgressReturn (obj makeFollow_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.followok)...)
	return out
}

func serializegetWallet_arg_EgressExpect (obj getWallet_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.nname)), []byte(obj.nname)...)...)
	return out
}

func serializegetWallet_arg_EgressReturn (obj getWallet_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, obj.owner.Bytes()...)
	return out
}

func serializegetStrat_arg_EgressExpect (obj getStrat_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.txid[:]...)
	return out
}

func serializegetStrat_arg_EgressReturn (obj getStrat_arg_EgressReturn) []byte {
	var out []byte
	out = serializeStrat(obj.strato)
	return out
}

func serializegetAccount_arg_EgressExpect (obj getAccount_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.owner.Bytes()...)
	return out
}

func serializegetAccount_arg_EgressReturn (obj getAccount_arg_EgressReturn) []byte {
	var out []byte
	out = serializeAccount(obj.accnt)
	return out
}

func serializemakePfp_arg_EgressExpect (obj makePfp_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.pfp)), []byte(obj.pfp)...)...)
	return out
}

func serializemakePfp_arg_EgressReturn (obj makePfp_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.pfpok)...)
	return out
}

func serializemakeReply_arg_EgressExpect (obj makeReply_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.reply[:]...)
	out = append(out, append(breakInt(len(obj.strat)), []byte(obj.strat)...)...)
	return out
}

func serializemakeReply_arg_EgressReturn (obj makeReply_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.replyok)...)
	return out
}

func serializegetReplies_arg_EgressExpect (obj getReplies_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.txid[:]...)
	return out
}

func serializegetReplies_arg_EgressReturn (obj getReplies_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(len(obj.replies))...)
	for i := 0; i < len(obj.replies); i++ {
		out = append(out, obj.replies[i][:]...)
	}
	return out
}

func serializegetLikedBy_arg_EgressExpect (obj getLikedBy_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.txid[:]...)
	return out
}

func serializegetLikedBy_arg_EgressReturn (obj getLikedBy_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(len(obj.likedby))...)
	for i := 0; i < len(obj.likedby); i++ {
		out = append(out, obj.likedby[i].Bytes()...)
	}
	return out
}

func serializegetName_arg_EgressExpect (obj getName_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, obj.owner.Bytes()...)
	return out
}

func serializegetName_arg_EgressReturn (obj getName_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.name)), []byte(obj.name)...)...)
	return out
}

func serializegetHashtag_arg_EgressExpect (obj getHashtag_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.tag)), []byte(obj.tag)...)...)
	return out
}

func serializegetHashtag_arg_EgressReturn (obj getHashtag_arg_EgressReturn) []byte {
	var out []byte
	out = serializeHashtag(obj.hashtg)
	return out
}

func serializemakeBio_arg_EgressExpect (obj makeBio_arg_EgressExpect) []byte {
	var out []byte
	out = append(out, append(breakInt(len(obj.bio)), []byte(obj.bio)...)...)
	return out
}

func serializemakeBio_arg_EgressReturn (obj makeBio_arg_EgressReturn) []byte {
	var out []byte
	out = append(out, breakInt(obj.biook)...)
	return out
}



func deserializeHashtag (b []byte) Hashtag {
	_cxdatum_tmp_17Hashtag := Hashtag{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_17Hashtag
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_17Hashtag.name = string(b[:slen])
	b = b[slen:]
	_cxdatum_tmp_17Hashtag.tlikes = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_17Hashtag.trestrats = makeInt(b[:4])
	b = b[4:]
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_17Hashtag.strats = append(_cxdatum_tmp_17Hashtag.strats, tmp__)
		b = b[32:]
	}
	return _cxdatum_tmp_17Hashtag
}

func deserializeStrat (b []byte) Strat {
	_cxdatum_tmp_62Strat := Strat{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_62Strat
	}
	_cxdatum_tmp_62Strat.owner, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	_cxdatum_tmp_62Strat.obj, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_62Strat.txt = string(b[:slen])
	b = b[slen:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_62Strat.pname = string(b[:slen])
	b = b[slen:]
	_cxdatum_tmp_62Strat.likes = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_62Strat.restrats = makeInt(b[:4])
	b = b[4:]
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.AddressFromBytes(b[:25])
		_cxdatum_tmp_62Strat.tags = append(_cxdatum_tmp_62Strat.tags, tmp__)
		b = b[25:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__ := makeInt(b[:4])
		b = b[4:]
		_cxdatum_tmp_62Strat.hashs = append(_cxdatum_tmp_62Strat.hashs, string(b[:tmp__]))
		b = b[tmp__:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		_cxdatum_tmp_62Strat.hashidx = append(_cxdatum_tmp_62Strat.hashidx, makeInt(b[:4]))
		b = b[4:]
	}
	_cxdatum_tmp_62Strat.rplto, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	_cxdatum_tmp_62Strat.follow, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	return _cxdatum_tmp_62Strat
}

func deserializeAccount (b []byte) Account {
	_cxdatum_tmp_115Account := Account{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_115Account
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_115Account.name = string(b[:slen])
	b = b[slen:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_115Account.cname = string(b[:slen])
	b = b[slen:]
	_cxdatum_tmp_115Account.id, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_115Account.bio = string(b[:slen])
	b = b[slen:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_115Account.pfp = string(b[:slen])
	b = b[slen:]
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_115Account.strats = append(_cxdatum_tmp_115Account.strats, tmp__)
		b = b[32:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_115Account.likes = append(_cxdatum_tmp_115Account.likes, tmp__)
		b = b[32:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_115Account.restrats = append(_cxdatum_tmp_115Account.restrats, tmp__)
		b = b[32:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_115Account.tags = append(_cxdatum_tmp_115Account.tags, tmp__)
		b = b[32:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.AddressFromBytes(b[:25])
		_cxdatum_tmp_115Account.followers = append(_cxdatum_tmp_115Account.followers, tmp__)
		b = b[25:]
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.AddressFromBytes(b[:25])
		_cxdatum_tmp_115Account.following = append(_cxdatum_tmp_115Account.following, tmp__)
		b = b[25:]
	}
	_cxdatum_tmp_115Account.followcnt = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_115Account.fllwngcnt = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_115Account
}

func deserializegetRestratBy_arg_EgressExpect (b []byte) getRestratBy_arg_EgressExpect {
	_cxdatum_tmp_540getRestratBy_arg_EgressExpect := getRestratBy_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_540getRestratBy_arg_EgressExpect
	}
	_cxdatum_tmp_540getRestratBy_arg_EgressExpect.txid, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_540getRestratBy_arg_EgressExpect
}

func deserializegetRestratBy_arg_EgressReturn (b []byte) getRestratBy_arg_EgressReturn {
	_cxdatum_tmp_545getRestratBy_arg_EgressReturn := getRestratBy_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_545getRestratBy_arg_EgressReturn
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.AddressFromBytes(b[:25])
		_cxdatum_tmp_545getRestratBy_arg_EgressReturn.restratby = append(_cxdatum_tmp_545getRestratBy_arg_EgressReturn.restratby, tmp__)
		b = b[25:]
	}
	return _cxdatum_tmp_545getRestratBy_arg_EgressReturn
}

func deserializegetAllStrats_arg_EgressExpect (b []byte) getAllStrats_arg_EgressExpect {
	_cxdatum_tmp_546getAllStrats_arg_EgressExpect := getAllStrats_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_546getAllStrats_arg_EgressExpect
	}
	return _cxdatum_tmp_546getAllStrats_arg_EgressExpect
}

func deserializegetAllStrats_arg_EgressReturn (b []byte) getAllStrats_arg_EgressReturn {
	_cxdatum_tmp_551getAllStrats_arg_EgressReturn := getAllStrats_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_551getAllStrats_arg_EgressReturn
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_551getAllStrats_arg_EgressReturn.allstrats = append(_cxdatum_tmp_551getAllStrats_arg_EgressReturn.allstrats, tmp__)
		b = b[32:]
	}
	return _cxdatum_tmp_551getAllStrats_arg_EgressReturn
}

func deserializemakeName_arg_EgressExpect (b []byte) makeName_arg_EgressExpect {
	_cxdatum_tmp_556makeName_arg_EgressExpect := makeName_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_556makeName_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_556makeName_arg_EgressExpect.name = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_556makeName_arg_EgressExpect
}

func deserializemakeName_arg_EgressReturn (b []byte) makeName_arg_EgressReturn {
	_cxdatum_tmp_561makeName_arg_EgressReturn := makeName_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_561makeName_arg_EgressReturn
	}
	_cxdatum_tmp_561makeName_arg_EgressReturn.nameok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_561makeName_arg_EgressReturn
}

func deserializemakeLike_arg_EgressExpect (b []byte) makeLike_arg_EgressExpect {
	_cxdatum_tmp_566makeLike_arg_EgressExpect := makeLike_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_566makeLike_arg_EgressExpect
	}
	_cxdatum_tmp_566makeLike_arg_EgressExpect.like, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_566makeLike_arg_EgressExpect
}

func deserializemakeLike_arg_EgressReturn (b []byte) makeLike_arg_EgressReturn {
	_cxdatum_tmp_571makeLike_arg_EgressReturn := makeLike_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_571makeLike_arg_EgressReturn
	}
	_cxdatum_tmp_571makeLike_arg_EgressReturn.likeok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_571makeLike_arg_EgressReturn
}

func deserializemakeStrat_arg_EgressExpect (b []byte) makeStrat_arg_EgressExpect {
	_cxdatum_tmp_576makeStrat_arg_EgressExpect := makeStrat_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_576makeStrat_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_576makeStrat_arg_EgressExpect.strat = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_576makeStrat_arg_EgressExpect
}

func deserializemakeStrat_arg_EgressReturn (b []byte) makeStrat_arg_EgressReturn {
	_cxdatum_tmp_581makeStrat_arg_EgressReturn := makeStrat_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_581makeStrat_arg_EgressReturn
	}
	_cxdatum_tmp_581makeStrat_arg_EgressReturn.stratok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_581makeStrat_arg_EgressReturn
}

func deserializemakeRestrat_arg_EgressExpect (b []byte) makeRestrat_arg_EgressExpect {
	_cxdatum_tmp_586makeRestrat_arg_EgressExpect := makeRestrat_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_586makeRestrat_arg_EgressExpect
	}
	_cxdatum_tmp_586makeRestrat_arg_EgressExpect.restrat, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_586makeRestrat_arg_EgressExpect
}

func deserializemakeRestrat_arg_EgressReturn (b []byte) makeRestrat_arg_EgressReturn {
	_cxdatum_tmp_591makeRestrat_arg_EgressReturn := makeRestrat_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_591makeRestrat_arg_EgressReturn
	}
	_cxdatum_tmp_591makeRestrat_arg_EgressReturn.restratok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_591makeRestrat_arg_EgressReturn
}

func deserializemakeFollow_arg_EgressExpect (b []byte) makeFollow_arg_EgressExpect {
	_cxdatum_tmp_596makeFollow_arg_EgressExpect := makeFollow_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_596makeFollow_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_596makeFollow_arg_EgressExpect.owner = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_596makeFollow_arg_EgressExpect
}

func deserializemakeFollow_arg_EgressReturn (b []byte) makeFollow_arg_EgressReturn {
	_cxdatum_tmp_601makeFollow_arg_EgressReturn := makeFollow_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_601makeFollow_arg_EgressReturn
	}
	_cxdatum_tmp_601makeFollow_arg_EgressReturn.followok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_601makeFollow_arg_EgressReturn
}

func deserializegetWallet_arg_EgressExpect (b []byte) getWallet_arg_EgressExpect {
	_cxdatum_tmp_606getWallet_arg_EgressExpect := getWallet_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_606getWallet_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_606getWallet_arg_EgressExpect.nname = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_606getWallet_arg_EgressExpect
}

func deserializegetWallet_arg_EgressReturn (b []byte) getWallet_arg_EgressReturn {
	_cxdatum_tmp_611getWallet_arg_EgressReturn := getWallet_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_611getWallet_arg_EgressReturn
	}
	_cxdatum_tmp_611getWallet_arg_EgressReturn.owner, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	return _cxdatum_tmp_611getWallet_arg_EgressReturn
}

func deserializegetStrat_arg_EgressExpect (b []byte) getStrat_arg_EgressExpect {
	_cxdatum_tmp_616getStrat_arg_EgressExpect := getStrat_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_616getStrat_arg_EgressExpect
	}
	_cxdatum_tmp_616getStrat_arg_EgressExpect.txid, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_616getStrat_arg_EgressExpect
}

func deserializegetStrat_arg_EgressReturn (b []byte) getStrat_arg_EgressReturn {
	_cxdatum_tmp_619getStrat_arg_EgressReturn := getStrat_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_619getStrat_arg_EgressReturn
	}
	_cxdatum_tmp_619getStrat_arg_EgressReturn.strato = deserializeStrat(b)
	return _cxdatum_tmp_619getStrat_arg_EgressReturn
}

func deserializegetAccount_arg_EgressExpect (b []byte) getAccount_arg_EgressExpect {
	_cxdatum_tmp_624getAccount_arg_EgressExpect := getAccount_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_624getAccount_arg_EgressExpect
	}
	_cxdatum_tmp_624getAccount_arg_EgressExpect.owner, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	return _cxdatum_tmp_624getAccount_arg_EgressExpect
}

func deserializegetAccount_arg_EgressReturn (b []byte) getAccount_arg_EgressReturn {
	_cxdatum_tmp_627getAccount_arg_EgressReturn := getAccount_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_627getAccount_arg_EgressReturn
	}
	_cxdatum_tmp_627getAccount_arg_EgressReturn.accnt = deserializeAccount(b)
	return _cxdatum_tmp_627getAccount_arg_EgressReturn
}

func deserializemakePfp_arg_EgressExpect (b []byte) makePfp_arg_EgressExpect {
	_cxdatum_tmp_632makePfp_arg_EgressExpect := makePfp_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_632makePfp_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_632makePfp_arg_EgressExpect.pfp = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_632makePfp_arg_EgressExpect
}

func deserializemakePfp_arg_EgressReturn (b []byte) makePfp_arg_EgressReturn {
	_cxdatum_tmp_637makePfp_arg_EgressReturn := makePfp_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_637makePfp_arg_EgressReturn
	}
	_cxdatum_tmp_637makePfp_arg_EgressReturn.pfpok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_637makePfp_arg_EgressReturn
}

func deserializemakeReply_arg_EgressExpect (b []byte) makeReply_arg_EgressExpect {
	_cxdatum_tmp_646makeReply_arg_EgressExpect := makeReply_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_646makeReply_arg_EgressExpect
	}
	_cxdatum_tmp_646makeReply_arg_EgressExpect.reply, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_646makeReply_arg_EgressExpect.strat = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_646makeReply_arg_EgressExpect
}

func deserializemakeReply_arg_EgressReturn (b []byte) makeReply_arg_EgressReturn {
	_cxdatum_tmp_651makeReply_arg_EgressReturn := makeReply_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_651makeReply_arg_EgressReturn
	}
	_cxdatum_tmp_651makeReply_arg_EgressReturn.replyok = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_651makeReply_arg_EgressReturn
}

func deserializegetReplies_arg_EgressExpect (b []byte) getReplies_arg_EgressExpect {
	_cxdatum_tmp_656getReplies_arg_EgressExpect := getReplies_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_656getReplies_arg_EgressExpect
	}
	_cxdatum_tmp_656getReplies_arg_EgressExpect.txid, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_656getReplies_arg_EgressExpect
}

func deserializegetReplies_arg_EgressReturn (b []byte) getReplies_arg_EgressReturn {
	_cxdatum_tmp_661getReplies_arg_EgressReturn := getReplies_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_661getReplies_arg_EgressReturn
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.SHA256FromBytes(b[:32])
		_cxdatum_tmp_661getReplies_arg_EgressReturn.replies = append(_cxdatum_tmp_661getReplies_arg_EgressReturn.replies, tmp__)
		b = b[32:]
	}
	return _cxdatum_tmp_661getReplies_arg_EgressReturn
}

func deserializegetLikedBy_arg_EgressExpect (b []byte) getLikedBy_arg_EgressExpect {
	_cxdatum_tmp_666getLikedBy_arg_EgressExpect := getLikedBy_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_666getLikedBy_arg_EgressExpect
	}
	_cxdatum_tmp_666getLikedBy_arg_EgressExpect.txid, _ = cipher.SHA256FromBytes(b[:32])
	b = b[32:]
	return _cxdatum_tmp_666getLikedBy_arg_EgressExpect
}

func deserializegetLikedBy_arg_EgressReturn (b []byte) getLikedBy_arg_EgressReturn {
	_cxdatum_tmp_671getLikedBy_arg_EgressReturn := getLikedBy_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_671getLikedBy_arg_EgressReturn
	}
	slen = makeInt(b[:4])
	b = b[4:]
	for i := 0; i < slen; i++ {
		tmp__, _ := cipher.AddressFromBytes(b[:25])
		_cxdatum_tmp_671getLikedBy_arg_EgressReturn.likedby = append(_cxdatum_tmp_671getLikedBy_arg_EgressReturn.likedby, tmp__)
		b = b[25:]
	}
	return _cxdatum_tmp_671getLikedBy_arg_EgressReturn
}

func deserializegetName_arg_EgressExpect (b []byte) getName_arg_EgressExpect {
	_cxdatum_tmp_676getName_arg_EgressExpect := getName_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_676getName_arg_EgressExpect
	}
	_cxdatum_tmp_676getName_arg_EgressExpect.owner, _ = cipher.AddressFromBytes(b[:25])
	b = b[25:]
	return _cxdatum_tmp_676getName_arg_EgressExpect
}

func deserializegetName_arg_EgressReturn (b []byte) getName_arg_EgressReturn {
	_cxdatum_tmp_681getName_arg_EgressReturn := getName_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_681getName_arg_EgressReturn
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_681getName_arg_EgressReturn.name = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_681getName_arg_EgressReturn
}

func deserializegetHashtag_arg_EgressExpect (b []byte) getHashtag_arg_EgressExpect {
	_cxdatum_tmp_686getHashtag_arg_EgressExpect := getHashtag_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_686getHashtag_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_686getHashtag_arg_EgressExpect.tag = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_686getHashtag_arg_EgressExpect
}

func deserializegetHashtag_arg_EgressReturn (b []byte) getHashtag_arg_EgressReturn {
	_cxdatum_tmp_689getHashtag_arg_EgressReturn := getHashtag_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_689getHashtag_arg_EgressReturn
	}
	_cxdatum_tmp_689getHashtag_arg_EgressReturn.hashtg = deserializeHashtag(b)
	return _cxdatum_tmp_689getHashtag_arg_EgressReturn
}

func deserializemakeBio_arg_EgressExpect (b []byte) makeBio_arg_EgressExpect {
	_cxdatum_tmp_694makeBio_arg_EgressExpect := makeBio_arg_EgressExpect{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_694makeBio_arg_EgressExpect
	}
	slen = makeInt(b[:4])
	b = b[4:]
	_cxdatum_tmp_694makeBio_arg_EgressExpect.bio = string(b[:slen])
	b = b[slen:]
	return _cxdatum_tmp_694makeBio_arg_EgressExpect
}

func deserializemakeBio_arg_EgressReturn (b []byte) makeBio_arg_EgressReturn {
	_cxdatum_tmp_699makeBio_arg_EgressReturn := makeBio_arg_EgressReturn{}
	slen := len(b)
	if slen == 0 {
		return _cxdatum_tmp_699makeBio_arg_EgressReturn
	}
	_cxdatum_tmp_699makeBio_arg_EgressReturn.biook = makeInt(b[:4])
	b = b[4:]
	return _cxdatum_tmp_699makeBio_arg_EgressReturn
}


